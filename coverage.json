{
  "instrumentation": "node-jscoverage",
  "sloc": 261,
  "hits": 261,
  "misses": 0,
  "coverage": 100,
  "files": [
    {
      "filename": "index.js",
      "coverage": 100,
      "hits": 44,
      "misses": 0,
      "sloc": 44,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// HL7 Parser",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  index.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "",
          "coverage": ""
        },
        "10": {
          "source": "/**",
          "coverage": ""
        },
        "11": {
          "source": " * Module dependencies",
          "coverage": ""
        },
        "12": {
          "source": " */",
          "coverage": ""
        },
        "13": {
          "source": "var Transform = require('stream').Transform",
          "coverage": 1
        },
        "14": {
          "source": "  , util = require('util')",
          "coverage": ""
        },
        "15": {
          "source": "  , Segment = require('./segment')",
          "coverage": ""
        },
        "16": {
          "source": "  , Message = require('./message')",
          "coverage": ""
        },
        "17": {
          "source": "  , utils = require('./utils')",
          "coverage": ""
        },
        "18": {
          "source": "",
          "coverage": ""
        },
        "19": {
          "source": "exports.Message = Message",
          "coverage": 1
        },
        "20": {
          "source": "exports.Segment = Segment",
          "coverage": 1
        },
        "21": {
          "source": "exports.Parser = Parser",
          "coverage": 1
        },
        "22": {
          "source": "exports.utils = utils",
          "coverage": 1
        },
        "23": {
          "source": "",
          "coverage": ""
        },
        "24": {
          "source": "/**",
          "coverage": ""
        },
        "25": {
          "source": " * Constructor",
          "coverage": ""
        },
        "26": {
          "source": " */",
          "coverage": ""
        },
        "27": {
          "source": "function Parser() {",
          "coverage": 1
        },
        "28": {
          "source": "  var opts = { objectMode: true }",
          "coverage": 9
        },
        "29": {
          "source": "  if (!(this instanceof Parser))",
          "coverage": 9
        },
        "30": {
          "source": "    return new Parser(opts)",
          "coverage": 1
        },
        "31": {
          "source": "",
          "coverage": ""
        },
        "32": {
          "source": "  var self = this",
          "coverage": 8
        },
        "33": {
          "source": "  Transform.call(this, opts)",
          "coverage": 8
        },
        "34": {
          "source": "",
          "coverage": ""
        },
        "35": {
          "source": "  this._messages = []",
          "coverage": 8
        },
        "36": {
          "source": "  this.current = null",
          "coverage": 8
        },
        "37": {
          "source": "}",
          "coverage": ""
        },
        "38": {
          "source": "",
          "coverage": ""
        },
        "39": {
          "source": "util.inherits(Parser, Transform)",
          "coverage": 1
        },
        "40": {
          "source": "",
          "coverage": ""
        },
        "41": {
          "source": "/**",
          "coverage": ""
        },
        "42": {
          "source": " * Transform for parser",
          "coverage": ""
        },
        "43": {
          "source": " *",
          "coverage": ""
        },
        "44": {
          "source": " * **NOTE: The stream should have been pipe through `split()` already**",
          "coverage": ""
        },
        "45": {
          "source": " *",
          "coverage": ""
        },
        "46": {
          "source": " * @param {Buffer} data The segment as a buffer",
          "coverage": ""
        },
        "47": {
          "source": " * @param {String} encoding The encoding of the buffer",
          "coverage": ""
        },
        "48": {
          "source": " * @param {Function} cb function(err, res)",
          "coverage": ""
        },
        "49": {
          "source": " * @api private",
          "coverage": ""
        },
        "50": {
          "source": " */",
          "coverage": ""
        },
        "51": {
          "source": "Parser.prototype._transform = function(data, encoding, done) {",
          "coverage": 1
        },
        "52": {
          "source": "  var self = this",
          "coverage": 664
        },
        "53": {
          "source": "  var segment",
          "coverage": 664
        },
        "54": {
          "source": "  try {",
          "coverage": 664
        },
        "55": {
          "source": "    if (this.current) {",
          "coverage": 664
        },
        "56": {
          "source": "      segment = new Segment(data, this.current.delimiters())",
          "coverage": 658
        },
        "57": {
          "source": "    } else {",
          "coverage": ""
        },
        "58": {
          "source": "      segment = new Segment(data)",
          "coverage": 6
        },
        "59": {
          "source": "    }",
          "coverage": ""
        },
        "60": {
          "source": "  }",
          "coverage": ""
        },
        "61": {
          "source": "  catch (e) {",
          "coverage": ""
        },
        "62": {
          "source": "    self.emit('error', e)",
          "coverage": 1
        },
        "63": {
          "source": "    segment = null",
          "coverage": 1
        },
        "64": {
          "source": "  }",
          "coverage": ""
        },
        "65": {
          "source": "  if (segment &amp;&amp; segment.parsed) {",
          "coverage": 664
        },
        "66": {
          "source": "    var isHeader = utils.segmentIsHeader(segment)",
          "coverage": 654
        },
        "67": {
          "source": "    if (isHeader &amp;&amp; this.current) {",
          "coverage": 654
        },
        "68": {
          "source": "      this.emit('message', this.current)",
          "coverage": 103
        },
        "69": {
          "source": "      var message = new Message()",
          "coverage": 103
        },
        "70": {
          "source": "      message.addSegment(segment)",
          "coverage": 103
        },
        "71": {
          "source": "      this._messages.push(message)",
          "coverage": 103
        },
        "72": {
          "source": "      this.current = message",
          "coverage": 103
        },
        "73": {
          "source": "    } else if (isHeader &amp;&amp; !this.current) {",
          "coverage": 551
        },
        "74": {
          "source": "      this.current = new Message()",
          "coverage": 5
        },
        "75": {
          "source": "      this.current.addSegment(segment)",
          "coverage": 5
        },
        "76": {
          "source": "    } else {",
          "coverage": ""
        },
        "77": {
          "source": "      this.current.addSegment(segment)",
          "coverage": 546
        },
        "78": {
          "source": "    }",
          "coverage": ""
        },
        "79": {
          "source": "    this.push(segment)",
          "coverage": 654
        },
        "80": {
          "source": "  }",
          "coverage": ""
        },
        "81": {
          "source": "  done()",
          "coverage": 664
        },
        "82": {
          "source": "}",
          "coverage": ""
        },
        "83": {
          "source": "",
          "coverage": ""
        },
        "84": {
          "source": "Parser.prototype._flush = function(done) {",
          "coverage": 1
        },
        "85": {
          "source": "  var self = this",
          "coverage": 5
        },
        "86": {
          "source": "  if (this.current &amp;&amp; this.current.segments.length) {",
          "coverage": 5
        },
        "87": {
          "source": "    this.emit('message', this.current)",
          "coverage": 5
        },
        "88": {
          "source": "    this._messages.push(this.current)",
          "coverage": 5
        },
        "89": {
          "source": "    this.current = null",
          "coverage": 5
        },
        "90": {
          "source": "  }",
          "coverage": ""
        },
        "91": {
          "source": "  this.emit('messages', this._messages)",
          "coverage": 5
        },
        "92": {
          "source": "}",
          "coverage": ""
        }
      }
    },
    {
      "filename": "message.js",
      "coverage": 100,
      "hits": 36,
      "misses": 0,
      "sloc": 36,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// HL7 Parser - Message",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  message.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "",
          "coverage": ""
        },
        "10": {
          "source": "/**",
          "coverage": ""
        },
        "11": {
          "source": " * Module dependencies",
          "coverage": ""
        },
        "12": {
          "source": " */",
          "coverage": ""
        },
        "13": {
          "source": "var _ = require('underscore')",
          "coverage": 1
        },
        "14": {
          "source": "  , utils = require('./utils')",
          "coverage": ""
        },
        "15": {
          "source": "  , Segment = require('./segment')",
          "coverage": ""
        },
        "16": {
          "source": "",
          "coverage": ""
        },
        "17": {
          "source": "// Expose exports",
          "coverage": ""
        },
        "18": {
          "source": "module.exports = Message",
          "coverage": 1
        },
        "19": {
          "source": "",
          "coverage": ""
        },
        "20": {
          "source": "/**",
          "coverage": ""
        },
        "21": {
          "source": " * Constructor",
          "coverage": ""
        },
        "22": {
          "source": " *",
          "coverage": ""
        },
        "23": {
          "source": " * @param {Array|Segment} segments A single Segment or an array of Segments",
          "coverage": ""
        },
        "24": {
          "source": " * @api public",
          "coverage": ""
        },
        "25": {
          "source": " */",
          "coverage": ""
        },
        "26": {
          "source": "function Message(segments) {",
          "coverage": 1
        },
        "27": {
          "source": "  if (!(this instanceof Message))",
          "coverage": 117
        },
        "28": {
          "source": "    return new Message(segments)",
          "coverage": 1
        },
        "29": {
          "source": "  if (segments &amp;&amp; Array.isArray(segments)) {",
          "coverage": 116
        },
        "30": {
          "source": "    this.segments = segments",
          "coverage": 1
        },
        "31": {
          "source": "    this.segmentTypes = _.unique(",
          "coverage": 1
        },
        "32": {
          "source": "      _.pluck(this.segments, 'SegmentType')",
          "coverage": ""
        },
        "33": {
          "source": "    )",
          "coverage": ""
        },
        "34": {
          "source": "    var len = segments.length",
          "coverage": 1
        },
        "35": {
          "source": "    for (var i=0; i&lt;len; i++) {",
          "coverage": 1
        },
        "36": {
          "source": "      if (utils.segmentIsHeader(segments[i])) {",
          "coverage": 1
        },
        "37": {
          "source": "        this.header = segments[i]",
          "coverage": 1
        },
        "38": {
          "source": "        break",
          "coverage": 1
        },
        "39": {
          "source": "      }",
          "coverage": ""
        },
        "40": {
          "source": "    }",
          "coverage": ""
        },
        "41": {
          "source": "  } else if (segments instanceof Segment) {",
          "coverage": 115
        },
        "42": {
          "source": "    this.segments = [segments]",
          "coverage": 2
        },
        "43": {
          "source": "    if (utils.segmentIsHeader(segments)) {",
          "coverage": 2
        },
        "44": {
          "source": "      this.header = segments",
          "coverage": 2
        },
        "45": {
          "source": "    }",
          "coverage": ""
        },
        "46": {
          "source": "    this.segmentTypes = [segments.parsed.SegmentType]",
          "coverage": 2
        },
        "47": {
          "source": "  } else {",
          "coverage": ""
        },
        "48": {
          "source": "    this.segments = []",
          "coverage": 113
        },
        "49": {
          "source": "    this.segmentTypes = []",
          "coverage": 113
        },
        "50": {
          "source": "    this.header = null",
          "coverage": 113
        },
        "51": {
          "source": "  }",
          "coverage": ""
        },
        "52": {
          "source": "}",
          "coverage": ""
        },
        "53": {
          "source": "",
          "coverage": ""
        },
        "54": {
          "source": "/**",
          "coverage": ""
        },
        "55": {
          "source": " * Does this message have any segments?",
          "coverage": ""
        },
        "56": {
          "source": " *",
          "coverage": ""
        },
        "57": {
          "source": " * @api public",
          "coverage": ""
        },
        "58": {
          "source": " * @returns Boolean",
          "coverage": ""
        },
        "59": {
          "source": " */",
          "coverage": ""
        },
        "60": {
          "source": "Message.prototype.hasSegments = function() {",
          "coverage": 1
        },
        "61": {
          "source": "  return this.segments.length !== 0",
          "coverage": 2
        },
        "62": {
          "source": "}",
          "coverage": ""
        },
        "63": {
          "source": "",
          "coverage": ""
        },
        "64": {
          "source": "/**",
          "coverage": ""
        },
        "65": {
          "source": " * Adds the given _segment_ to the message",
          "coverage": ""
        },
        "66": {
          "source": " *",
          "coverage": ""
        },
        "67": {
          "source": " * @param {Segment} segment The Segment to add to the message",
          "coverage": ""
        },
        "68": {
          "source": " * @api public",
          "coverage": ""
        },
        "69": {
          "source": " */",
          "coverage": ""
        },
        "70": {
          "source": "Message.prototype.addSegment = function(segment) {",
          "coverage": 1
        },
        "71": {
          "source": "  this.segments.push(segment)",
          "coverage": 654
        },
        "72": {
          "source": "  var t = segment.parsed.SegmentType",
          "coverage": 654
        },
        "73": {
          "source": "  if (!(~this.segmentTypes.indexOf(t))) {",
          "coverage": 654
        },
        "74": {
          "source": "    this.segmentTypes.push(t)",
          "coverage": 654
        },
        "75": {
          "source": "  }",
          "coverage": ""
        },
        "76": {
          "source": "  if (utils.segmentTypeIsHeader(t)) {",
          "coverage": 654
        },
        "77": {
          "source": "    this.header = segment",
          "coverage": 108
        },
        "78": {
          "source": "  }",
          "coverage": ""
        },
        "79": {
          "source": "}",
          "coverage": ""
        },
        "80": {
          "source": "",
          "coverage": ""
        },
        "81": {
          "source": "/**",
          "coverage": ""
        },
        "82": {
          "source": " * Gets the header Segment of the Message",
          "coverage": ""
        },
        "83": {
          "source": " *",
          "coverage": ""
        },
        "84": {
          "source": " * @api public",
          "coverage": ""
        },
        "85": {
          "source": " * @returns Segment",
          "coverage": ""
        },
        "86": {
          "source": " */",
          "coverage": ""
        },
        "87": {
          "source": "Message.prototype.getHeader = function() {",
          "coverage": 1
        },
        "88": {
          "source": "  return this.header",
          "coverage": 3
        },
        "89": {
          "source": "}",
          "coverage": ""
        },
        "90": {
          "source": "",
          "coverage": ""
        },
        "91": {
          "source": "/**",
          "coverage": ""
        },
        "92": {
          "source": " * Gets the delimiters for the given message. These are taken from the MSH",
          "coverage": ""
        },
        "93": {
          "source": " *",
          "coverage": ""
        },
        "94": {
          "source": " * @api public",
          "coverage": ""
        },
        "95": {
          "source": " * @returns Object",
          "coverage": ""
        },
        "96": {
          "source": " */",
          "coverage": ""
        },
        "97": {
          "source": "Message.prototype.delimiters = function() {",
          "coverage": 1
        },
        "98": {
          "source": "  if (!this.header) return {",
          "coverage": 658
        },
        "99": {
          "source": "    segment: '\\r',",
          "coverage": ""
        },
        "100": {
          "source": "    field: '|',",
          "coverage": ""
        },
        "101": {
          "source": "    component: '^',",
          "coverage": ""
        },
        "102": {
          "source": "    subcomponent: '&amp;',",
          "coverage": ""
        },
        "103": {
          "source": "    repetition: '~',",
          "coverage": ""
        },
        "104": {
          "source": "    escape: '\\\\'",
          "coverage": ""
        },
        "105": {
          "source": "  }",
          "coverage": ""
        },
        "106": {
          "source": "",
          "coverage": ""
        },
        "107": {
          "source": "  var chars = this.header.parsed.EncodingCharacters",
          "coverage": 658
        },
        "108": {
          "source": "  return {",
          "coverage": 658
        },
        "109": {
          "source": "    segment: '\\r',",
          "coverage": ""
        },
        "110": {
          "source": "    field: chars[0] || '|',",
          "coverage": ""
        },
        "111": {
          "source": "    component: chars[1] || '^',",
          "coverage": ""
        },
        "112": {
          "source": "    subcomponent: chars[2] || '&amp;',",
          "coverage": ""
        },
        "113": {
          "source": "    repetition: chars[3] || '~',",
          "coverage": ""
        },
        "114": {
          "source": "    escape: chars[4] || '\\\\'",
          "coverage": ""
        },
        "115": {
          "source": "  }",
          "coverage": ""
        },
        "116": {
          "source": "}",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segment.js",
      "coverage": 100,
      "hits": 76,
      "misses": 0,
      "sloc": 76,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// Segment parser for HL7 v2.3.1",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "",
          "coverage": ""
        },
        "10": {
          "source": "/**",
          "coverage": ""
        },
        "11": {
          "source": " * Module depends",
          "coverage": ""
        },
        "12": {
          "source": " */",
          "coverage": ""
        },
        "13": {
          "source": "var Buffer = require('buffer').Buffer",
          "coverage": 1
        },
        "14": {
          "source": "  , path = require('path')",
          "coverage": ""
        },
        "15": {
          "source": "  , fs = require('fs')",
          "coverage": ""
        },
        "16": {
          "source": "  , segmentsDir = path.join(__dirname, 'segments')",
          "coverage": ""
        },
        "17": {
          "source": "  , utils = require('./utils')",
          "coverage": ""
        },
        "18": {
          "source": "  , utile = require('core-util-is')",
          "coverage": ""
        },
        "19": {
          "source": "  , types = {}",
          "coverage": ""
        },
        "20": {
          "source": "",
          "coverage": ""
        },
        "21": {
          "source": "/*!",
          "coverage": ""
        },
        "22": {
          "source": " * Load our segment types",
          "coverage": ""
        },
        "23": {
          "source": " */",
          "coverage": ""
        },
        "24": {
          "source": "fs.readdirSync(segmentsDir)",
          "coverage": 1
        },
        "25": {
          "source": "  .filter(function(file) {",
          "coverage": ""
        },
        "26": {
          "source": "    return path.extname(file) === '.js'",
          "coverage": 49
        },
        "27": {
          "source": "  })",
          "coverage": ""
        },
        "28": {
          "source": "  .forEach(function(file) {",
          "coverage": ""
        },
        "29": {
          "source": "    if (path.extname(file) === '.js') {",
          "coverage": 48
        },
        "30": {
          "source": "      var segType = path.basename(file).replace('.js', '').toUpperCase()",
          "coverage": 48
        },
        "31": {
          "source": "      types[segType] = require(path.join(__dirname, 'segments', file)).fields",
          "coverage": 48
        },
        "32": {
          "source": "    }",
          "coverage": ""
        },
        "33": {
          "source": "  })",
          "coverage": ""
        },
        "34": {
          "source": "",
          "coverage": ""
        },
        "35": {
          "source": "module.exports = Segment",
          "coverage": 1
        },
        "36": {
          "source": "",
          "coverage": ""
        },
        "37": {
          "source": "/**",
          "coverage": ""
        },
        "38": {
          "source": " * Constructor",
          "coverage": ""
        },
        "39": {
          "source": " */",
          "coverage": ""
        },
        "40": {
          "source": "function Segment(data, delimiters) {",
          "coverage": 1
        },
        "41": {
          "source": "  if (!(this instanceof Segment))",
          "coverage": 682
        },
        "42": {
          "source": "    return new Segment(data, delimiters)",
          "coverage": 1
        },
        "43": {
          "source": "",
          "coverage": ""
        },
        "44": {
          "source": "  if (delimiters) {",
          "coverage": 681
        },
        "45": {
          "source": "    this.delimiters = delimiters",
          "coverage": 658
        },
        "46": {
          "source": "  } else {",
          "coverage": ""
        },
        "47": {
          "source": "    this.delimiters = {",
          "coverage": 23
        },
        "48": {
          "source": "      segment: '\\r',",
          "coverage": ""
        },
        "49": {
          "source": "      field: '|',",
          "coverage": ""
        },
        "50": {
          "source": "      component: '^',",
          "coverage": ""
        },
        "51": {
          "source": "      subcomponent: '&amp;',",
          "coverage": ""
        },
        "52": {
          "source": "      repetition: '~',",
          "coverage": ""
        },
        "53": {
          "source": "      escape: '\\\\'",
          "coverage": ""
        },
        "54": {
          "source": "    }",
          "coverage": ""
        },
        "55": {
          "source": "  }",
          "coverage": ""
        },
        "56": {
          "source": "",
          "coverage": ""
        },
        "57": {
          "source": "  this.parsed = this.parse(data)",
          "coverage": 681
        },
        "58": {
          "source": "}",
          "coverage": ""
        },
        "59": {
          "source": "",
          "coverage": ""
        },
        "60": {
          "source": "/**",
          "coverage": ""
        },
        "61": {
          "source": " * Registers a new variant",
          "coverage": ""
        },
        "62": {
          "source": " *",
          "coverage": ""
        },
        "63": {
          "source": " * Required Keys:",
          "coverage": ""
        },
        "64": {
          "source": " *",
          "coverage": ""
        },
        "65": {
          "source": " *  - `name` {String} The variant name",
          "coverage": ""
        },
        "66": {
          "source": " *  - `fields` {Array} The fields this variant exposes",
          "coverage": ""
        },
        "67": {
          "source": " *",
          "coverage": ""
        },
        "68": {
          "source": " * @param {Object} variant The variant to register",
          "coverage": ""
        },
        "69": {
          "source": " * @api public",
          "coverage": ""
        },
        "70": {
          "source": " */",
          "coverage": ""
        },
        "71": {
          "source": "Segment.registerVariant = function(variant) {",
          "coverage": 1
        },
        "72": {
          "source": "  if (!utile.isObject(variant))",
          "coverage": 4
        },
        "73": {
          "source": "    throw new Error('Variant must be an object')",
          "coverage": 1
        },
        "74": {
          "source": "",
          "coverage": ""
        },
        "75": {
          "source": "  if (!variant.hasOwnProperty('name'))",
          "coverage": 3
        },
        "76": {
          "source": "    throw new Error('Variant must have a name')",
          "coverage": 1
        },
        "77": {
          "source": "",
          "coverage": ""
        },
        "78": {
          "source": "  if (!variant.hasOwnProperty('fields'))",
          "coverage": 2
        },
        "79": {
          "source": "    throw new Error('Variant must have fields')",
          "coverage": 1
        },
        "80": {
          "source": "",
          "coverage": ""
        },
        "81": {
          "source": "  var name = variant.name.toUpperCase()",
          "coverage": 1
        },
        "82": {
          "source": "  if (types.hasOwnProperty(name)) {",
          "coverage": 1
        },
        "83": {
          "source": "    types[name+'_'] = types[name]",
          "coverage": 1
        },
        "84": {
          "source": "  }",
          "coverage": ""
        },
        "85": {
          "source": "  types[name] = variant.fields",
          "coverage": 1
        },
        "86": {
          "source": "}",
          "coverage": ""
        },
        "87": {
          "source": "",
          "coverage": ""
        },
        "88": {
          "source": "/**",
          "coverage": ""
        },
        "89": {
          "source": " * Parses _data_ as a hl7 segment",
          "coverage": ""
        },
        "90": {
          "source": " *",
          "coverage": ""
        },
        "91": {
          "source": " * @param {Buffer|String} data The segment",
          "coverage": ""
        },
        "92": {
          "source": " * @api public",
          "coverage": ""
        },
        "93": {
          "source": " */",
          "coverage": ""
        },
        "94": {
          "source": "Segment.prototype.parse = function(data) {",
          "coverage": 1
        },
        "95": {
          "source": "  if (data &amp;&amp; data.length &gt; 1) { // account for trailing \\r",
          "coverage": 681
        },
        "96": {
          "source": "    data = data.replace(/\\u000b/g, '')",
          "coverage": 667
        },
        "97": {
          "source": "               .replace(/\\u001c/g, '')",
          "coverage": ""
        },
        "98": {
          "source": "    var s = data.slice(0, 3)",
          "coverage": 667
        },
        "99": {
          "source": "    if (s === 'MSH' || s === 'BHS' || s === 'FHS') {",
          "coverage": 667
        },
        "100": {
          "source": "      var delims = data.slice(3, 7)",
          "coverage": 114
        },
        "101": {
          "source": "      this.delimiters.segment = data.slice(-1)",
          "coverage": 114
        },
        "102": {
          "source": "      this.delimiters.field = delims[0]",
          "coverage": 114
        },
        "103": {
          "source": "      this.delimiters.repetition = delims[1]",
          "coverage": 114
        },
        "104": {
          "source": "      this.delimiters.escape = delims[2]",
          "coverage": 114
        },
        "105": {
          "source": "      this.delimiters.subcomponent = delims[3]",
          "coverage": 114
        },
        "106": {
          "source": "    }",
          "coverage": ""
        },
        "107": {
          "source": "    if (types.hasOwnProperty(s)) {",
          "coverage": 667
        },
        "108": {
          "source": "      var seg = this._parseSegment(s, data)",
          "coverage": 666
        },
        "109": {
          "source": "      return seg",
          "coverage": 666
        },
        "110": {
          "source": "    } else {",
          "coverage": ""
        },
        "111": {
          "source": "      /**",
          "coverage": ""
        },
        "112": {
          "source": "       * TODO Remove this and add a default segment parser",
          "coverage": ""
        },
        "113": {
          "source": "       * This is mainly in place so we can see what default",
          "coverage": ""
        },
        "114": {
          "source": "       * segments we are missing",
          "coverage": ""
        },
        "115": {
          "source": "       */",
          "coverage": ""
        },
        "116": {
          "source": "      var e = new Error('Invalid segment type: '+s)",
          "coverage": 1
        },
        "117": {
          "source": "      e.code = 'EINVSEGTYPE'",
          "coverage": 1
        },
        "118": {
          "source": "      e.raw = data",
          "coverage": 1
        },
        "119": {
          "source": "      throw new Error(e)",
          "coverage": 1
        },
        "120": {
          "source": "    }",
          "coverage": ""
        },
        "121": {
          "source": "  }",
          "coverage": ""
        },
        "122": {
          "source": "  return false",
          "coverage": 14
        },
        "123": {
          "source": "}",
          "coverage": ""
        },
        "124": {
          "source": "",
          "coverage": ""
        },
        "125": {
          "source": "Segment.prototype.toArray = function() {",
          "coverage": 1
        },
        "126": {
          "source": "  var type = this.segmentType()",
          "coverage": 4
        },
        "127": {
          "source": "  if (!type) return []",
          "coverage": 4
        },
        "128": {
          "source": "  var out = []",
          "coverage": 4
        },
        "129": {
          "source": "  var keys = Object.keys(this.parsed)",
          "coverage": 4
        },
        "130": {
          "source": "  var len = keys.length",
          "coverage": 4
        },
        "131": {
          "source": "  for (var i=0; i&lt;len; i++) {",
          "coverage": 4
        },
        "132": {
          "source": "    var key = keys[i]",
          "coverage": 141
        },
        "133": {
          "source": "    var idx = types[type].indexOf(key)",
          "coverage": 141
        },
        "134": {
          "source": "    if (idx === -1) continue",
          "coverage": 141
        },
        "135": {
          "source": "    out[idx] = this.parsed[key]",
          "coverage": 141
        },
        "136": {
          "source": "  }",
          "coverage": ""
        },
        "137": {
          "source": "  return out",
          "coverage": 4
        },
        "138": {
          "source": "}",
          "coverage": ""
        },
        "139": {
          "source": "",
          "coverage": ""
        },
        "140": {
          "source": "Segment.prototype.isHeader = function() {",
          "coverage": 1
        },
        "141": {
          "source": "  return utils.segmentIsHeader(this)",
          "coverage": 2
        },
        "142": {
          "source": "}",
          "coverage": ""
        },
        "143": {
          "source": "",
          "coverage": ""
        },
        "144": {
          "source": "Segment.prototype.segmentType = function() {",
          "coverage": 1
        },
        "145": {
          "source": "  if (this.parsed &amp;&amp; this.parsed.SegmentType)",
          "coverage": 670
        },
        "146": {
          "source": "    return this.parsed.SegmentType",
          "coverage": 669
        },
        "147": {
          "source": "  return null",
          "coverage": 1
        },
        "148": {
          "source": "}",
          "coverage": ""
        },
        "149": {
          "source": "",
          "coverage": ""
        },
        "150": {
          "source": "Segment.prototype.types = types",
          "coverage": 1
        },
        "151": {
          "source": "",
          "coverage": ""
        },
        "152": {
          "source": "Segment.prototype._parseSegment = function(segmentType, data) {",
          "coverage": 1
        },
        "153": {
          "source": "  var self = this",
          "coverage": 666
        },
        "154": {
          "source": "    , fieldDelim = self.delimiters.field",
          "coverage": ""
        },
        "155": {
          "source": "  data = String(data)",
          "coverage": 666
        },
        "156": {
          "source": "  var out = {}",
          "coverage": 666
        },
        "157": {
          "source": "  var comps = data.split(fieldDelim)",
          "coverage": 666
        },
        "158": {
          "source": "  var len = comps.length",
          "coverage": 666
        },
        "159": {
          "source": "  var fieldsLen = types[segmentType].length",
          "coverage": 666
        },
        "160": {
          "source": "  for (var i=0; i&lt;fieldsLen; i++) {",
          "coverage": 666
        },
        "161": {
          "source": "    var fieldName = types[segmentType][i]",
          "coverage": 21159
        },
        "162": {
          "source": "    if (fieldName === 'EncodingCharacters') {",
          "coverage": 21159
        },
        "163": {
          "source": "      out[fieldName] = fieldDelim+comps[i]",
          "coverage": 114
        },
        "164": {
          "source": "    } else {",
          "coverage": ""
        },
        "165": {
          "source": "      out[fieldName] = comps[i] || ''",
          "coverage": 21045
        },
        "166": {
          "source": "    }",
          "coverage": ""
        },
        "167": {
          "source": "  }",
          "coverage": ""
        },
        "168": {
          "source": "  return out",
          "coverage": 666
        },
        "169": {
          "source": "}",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/add.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// ADD Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'ADD'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'AddendumContinuationPointer'",
          "coverage": ""
        },
        "14": {
          "source": "]",
          "coverage": ""
        },
        "15": {
          "source": "",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/al1.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// AL1 Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'AL1'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'SetID'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'AllergyType'",
          "coverage": ""
        },
        "15": {
          "source": "  , 'AllergyCodeMnemonicDescription'",
          "coverage": ""
        },
        "16": {
          "source": "  , 'AllergySeverity'",
          "coverage": ""
        },
        "17": {
          "source": "  , 'AllergyReaction'",
          "coverage": ""
        },
        "18": {
          "source": "  , 'IdentificationDate'",
          "coverage": ""
        },
        "19": {
          "source": "]",
          "coverage": ""
        },
        "20": {
          "source": "",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/bhs.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// BHS Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'BHS'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'FieldSeparator'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'EncodingCharacters'",
          "coverage": ""
        },
        "15": {
          "source": "  , 'SendingApplication'",
          "coverage": ""
        },
        "16": {
          "source": "  , 'SendingFacility'",
          "coverage": ""
        },
        "17": {
          "source": "  , 'ReceivingApplication'",
          "coverage": ""
        },
        "18": {
          "source": "  , 'ReceivingFacility'",
          "coverage": ""
        },
        "19": {
          "source": "  , 'CreationDateTime'",
          "coverage": ""
        },
        "20": {
          "source": "  , 'Security'",
          "coverage": ""
        },
        "21": {
          "source": "  , 'NameIDType'",
          "coverage": ""
        },
        "22": {
          "source": "  , 'Comment'",
          "coverage": ""
        },
        "23": {
          "source": "  , 'ControlID'",
          "coverage": ""
        },
        "24": {
          "source": "  , 'ReferenceBatchControlID'",
          "coverage": ""
        },
        "25": {
          "source": "]",
          "coverage": ""
        },
        "26": {
          "source": "",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/blg.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// BLG Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'BLG'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'WhenToCharge'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'ChargeType'",
          "coverage": ""
        },
        "15": {
          "source": "  , 'AccountID'",
          "coverage": ""
        },
        "16": {
          "source": "]",
          "coverage": ""
        },
        "17": {
          "source": "",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/bts.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// BTS Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'BTS'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'MessageCount'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'Totals'",
          "coverage": ""
        },
        "15": {
          "source": "]",
          "coverage": ""
        },
        "16": {
          "source": "",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/db1.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// DB1 Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'DB1'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'SetID'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'DisabledPersonCode'",
          "coverage": ""
        },
        "15": {
          "source": "  , 'DisabledPersonIdentifier'",
          "coverage": ""
        },
        "16": {
          "source": "  , 'DisabledIndicator'",
          "coverage": ""
        },
        "17": {
          "source": "  , 'DisabledStartDate'",
          "coverage": ""
        },
        "18": {
          "source": "  , 'DisabledEndDate'",
          "coverage": ""
        },
        "19": {
          "source": "  , 'DisabledReturnToWorkDate'",
          "coverage": ""
        },
        "20": {
          "source": "  , 'DisabledUnableToWorkDate'",
          "coverage": ""
        },
        "21": {
          "source": "]",
          "coverage": ""
        },
        "22": {
          "source": "",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/dg1.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// DG1 Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'DG1'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'SetID'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'DiagnosisCodingMethod'",
          "coverage": ""
        },
        "15": {
          "source": "  , 'DiagnosisCode'",
          "coverage": ""
        },
        "16": {
          "source": "  , 'DiagnosisDescription'",
          "coverage": ""
        },
        "17": {
          "source": "  , 'DiagnosisDateTime'",
          "coverage": ""
        },
        "18": {
          "source": "  , 'DiagnosisType'",
          "coverage": ""
        },
        "19": {
          "source": "  , 'MajorDiagnosticCategory'",
          "coverage": ""
        },
        "20": {
          "source": "  , 'DiagnosticRelatedGroup'",
          "coverage": ""
        },
        "21": {
          "source": "  , 'DRGApprovalIndicator'",
          "coverage": ""
        },
        "22": {
          "source": "  , 'DRGGrouperReviewCode'",
          "coverage": ""
        },
        "23": {
          "source": "  , 'OutlierType'",
          "coverage": ""
        },
        "24": {
          "source": "  , 'OutlierDays'",
          "coverage": ""
        },
        "25": {
          "source": "  , 'OutlierCost'",
          "coverage": ""
        },
        "26": {
          "source": "  , 'GrouperVersionAndType'",
          "coverage": ""
        },
        "27": {
          "source": "  , 'DiagnosisPriority'",
          "coverage": ""
        },
        "28": {
          "source": "  , 'DiagnosingClinician'",
          "coverage": ""
        },
        "29": {
          "source": "  , 'DiagnosisClassification'",
          "coverage": ""
        },
        "30": {
          "source": "  , 'ConfidentialIndicator'",
          "coverage": ""
        },
        "31": {
          "source": "  , 'AttestationDateTime'",
          "coverage": ""
        },
        "32": {
          "source": "]",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/drg.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// DRG Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'DRG'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'DiagnosticRelatedGroup'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'DRGAssignedDateTime'",
          "coverage": ""
        },
        "15": {
          "source": "  , 'DRGApprovalIndicator'",
          "coverage": ""
        },
        "16": {
          "source": "  , 'DRGGrouperReviewCode'",
          "coverage": ""
        },
        "17": {
          "source": "  , 'OutlierType'",
          "coverage": ""
        },
        "18": {
          "source": "  , 'OutlierDays'",
          "coverage": ""
        },
        "19": {
          "source": "  , 'OutlierCost'",
          "coverage": ""
        },
        "20": {
          "source": "  , 'DRGPayor'",
          "coverage": ""
        },
        "21": {
          "source": "  , 'OutlierReimbursement'",
          "coverage": ""
        },
        "22": {
          "source": "  , 'ConfidentialIndicator'",
          "coverage": ""
        },
        "23": {
          "source": "]",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/dsc.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// DSC Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'DSC'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'ContinuationPointer'",
          "coverage": ""
        },
        "14": {
          "source": "]",
          "coverage": ""
        },
        "15": {
          "source": "",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/dsp.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// DSP Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'DSP'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'SetID'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'DisplayLevel'",
          "coverage": ""
        },
        "15": {
          "source": "  , 'DataLine'",
          "coverage": ""
        },
        "16": {
          "source": "  , 'LogicalBreakPoint'",
          "coverage": ""
        },
        "17": {
          "source": "  , 'ResultID'",
          "coverage": ""
        },
        "18": {
          "source": "]",
          "coverage": ""
        },
        "19": {
          "source": "",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/eql.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// EQL Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'EQL'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'Tag'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'ResponseFormatCode'",
          "coverage": ""
        },
        "15": {
          "source": "  , 'Name'",
          "coverage": ""
        },
        "16": {
          "source": "  , 'Statement'",
          "coverage": ""
        },
        "17": {
          "source": "]",
          "coverage": ""
        },
        "18": {
          "source": "",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/erq.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// ERQ Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'ERQ'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'Tag'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'ID'",
          "coverage": ""
        },
        "15": {
          "source": "  , 'InputParameterList'",
          "coverage": ""
        },
        "16": {
          "source": "]",
          "coverage": ""
        },
        "17": {
          "source": "",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/err.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// ERR Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'ERR'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'ErrorCode'",
          "coverage": ""
        },
        "14": {
          "source": "]",
          "coverage": ""
        },
        "15": {
          "source": "",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/evn.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// EVN Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'EVN'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'TypeCode'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'RecordedDateTime'",
          "coverage": ""
        },
        "15": {
          "source": "  , 'DateTimePlannedEvent'",
          "coverage": ""
        },
        "16": {
          "source": "  , 'EventReasonCode'",
          "coverage": ""
        },
        "17": {
          "source": "  , 'OperatorID'",
          "coverage": ""
        },
        "18": {
          "source": "  , 'EventOccurred'",
          "coverage": ""
        },
        "19": {
          "source": "]",
          "coverage": ""
        },
        "20": {
          "source": "",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/fhs.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// FHS Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'FHS'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'FieldSeparator'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'EncodingCharacters'",
          "coverage": ""
        },
        "15": {
          "source": "  , 'SendingApplication'",
          "coverage": ""
        },
        "16": {
          "source": "  , 'SendingFacility'",
          "coverage": ""
        },
        "17": {
          "source": "  , 'ReceivingApplication'",
          "coverage": ""
        },
        "18": {
          "source": "  , 'ReceivingFacility'",
          "coverage": ""
        },
        "19": {
          "source": "  , 'CreationDateTime'",
          "coverage": ""
        },
        "20": {
          "source": "  , 'Security'",
          "coverage": ""
        },
        "21": {
          "source": "  , 'NameID'",
          "coverage": ""
        },
        "22": {
          "source": "  , 'HeaderComment'",
          "coverage": ""
        },
        "23": {
          "source": "  , 'ControlID'",
          "coverage": ""
        },
        "24": {
          "source": "  , 'ReferenceFileControlID'",
          "coverage": ""
        },
        "25": {
          "source": "]",
          "coverage": ""
        },
        "26": {
          "source": "",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/ft1.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// FT1 Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'FT1'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'SetIDFT1'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'TransactionID'",
          "coverage": ""
        },
        "15": {
          "source": "  , 'TransactionBatchID'",
          "coverage": ""
        },
        "16": {
          "source": "  , 'TransactionDate'",
          "coverage": ""
        },
        "17": {
          "source": "  , 'TransactionPostingDate'",
          "coverage": ""
        },
        "18": {
          "source": "  , 'TransactionType'",
          "coverage": ""
        },
        "19": {
          "source": "  , 'TransactionCode'",
          "coverage": ""
        },
        "20": {
          "source": "  , 'TransactionDescription'",
          "coverage": ""
        },
        "21": {
          "source": "  , 'TransactionDescriptionAlt'",
          "coverage": ""
        },
        "22": {
          "source": "  , 'TransactionQuantity'",
          "coverage": ""
        },
        "23": {
          "source": "  , 'TransactionAmountExtended'",
          "coverage": ""
        },
        "24": {
          "source": "  , 'TransactionAmountUnit'",
          "coverage": ""
        },
        "25": {
          "source": "  , 'DepartmentCode'",
          "coverage": ""
        },
        "26": {
          "source": "  , 'InsurancePlanID'",
          "coverage": ""
        },
        "27": {
          "source": "  , 'InsuranceAmount'",
          "coverage": ""
        },
        "28": {
          "source": "  , 'AssignedPatientLocation'",
          "coverage": ""
        },
        "29": {
          "source": "  , 'FeeSchedule'",
          "coverage": ""
        },
        "30": {
          "source": "  , 'PatientType'",
          "coverage": ""
        },
        "31": {
          "source": "  , 'DiagnosisCodeFT1'",
          "coverage": ""
        },
        "32": {
          "source": "  , 'PerformedByCode'",
          "coverage": ""
        },
        "33": {
          "source": "  , 'OrderedByCode'",
          "coverage": ""
        },
        "34": {
          "source": "  , 'UnitCost'",
          "coverage": ""
        },
        "35": {
          "source": "  , 'FillerOrderNumber'",
          "coverage": ""
        },
        "36": {
          "source": "  , 'EnteredByCode'",
          "coverage": ""
        },
        "37": {
          "source": "  , 'ProcedureCode'",
          "coverage": ""
        },
        "38": {
          "source": "  , 'ProcedureCodeModifier'",
          "coverage": ""
        },
        "39": {
          "source": "]",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/fts.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// FTS Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'FTS'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'BatchCount'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'TrailerComment'",
          "coverage": ""
        },
        "15": {
          "source": "]",
          "coverage": ""
        },
        "16": {
          "source": "",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/gt1.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// GT1 Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'GT1'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'SetID'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'GuarantorNumber'",
          "coverage": ""
        },
        "15": {
          "source": "  , 'GuarantorName'",
          "coverage": ""
        },
        "16": {
          "source": "  , 'GuarantorSpouseName'",
          "coverage": ""
        },
        "17": {
          "source": "  , 'GuarantorAddress'",
          "coverage": ""
        },
        "18": {
          "source": "  , 'GuarantorPhoneHome'",
          "coverage": ""
        },
        "19": {
          "source": "  , 'GuarantorPhoneBusiness'",
          "coverage": ""
        },
        "20": {
          "source": "  , 'GuarantorBirthDate'",
          "coverage": ""
        },
        "21": {
          "source": "  , 'GuarantorSex'",
          "coverage": ""
        },
        "22": {
          "source": "  , 'GuarantorType'",
          "coverage": ""
        },
        "23": {
          "source": "  , 'GuarantorRelationship'",
          "coverage": ""
        },
        "24": {
          "source": "  , 'GuarantorSSN'",
          "coverage": ""
        },
        "25": {
          "source": "  , 'GuarantorDateBegin'",
          "coverage": ""
        },
        "26": {
          "source": "  , 'GuarantorDateEnd'",
          "coverage": ""
        },
        "27": {
          "source": "  , 'GuarantorPriority'",
          "coverage": ""
        },
        "28": {
          "source": "  , 'GuarantorEmployerName'",
          "coverage": ""
        },
        "29": {
          "source": "  , 'GuarantorEmployerAddress'",
          "coverage": ""
        },
        "30": {
          "source": "  , 'GuarantorEmployerPhoneNumber'",
          "coverage": ""
        },
        "31": {
          "source": "  , 'GuarantorEmployeeIDNumber'",
          "coverage": ""
        },
        "32": {
          "source": "  , 'GuarantorEmploymentStatus'",
          "coverage": ""
        },
        "33": {
          "source": "  , 'GuarantorOrganizationName'",
          "coverage": ""
        },
        "34": {
          "source": "  , 'GuarantorBillingHoldFlag'",
          "coverage": ""
        },
        "35": {
          "source": "  , 'GuarantorCreditRatingCode'",
          "coverage": ""
        },
        "36": {
          "source": "  , 'GuarantorDeathDateTime'",
          "coverage": ""
        },
        "37": {
          "source": "  , 'GuarantorDeathFlag'",
          "coverage": ""
        },
        "38": {
          "source": "  , 'GuarantorChargeAdjustmentCode'",
          "coverage": ""
        },
        "39": {
          "source": "  , 'GuarantorHouseholdAnnualIncome'",
          "coverage": ""
        },
        "40": {
          "source": "  , 'GuarantorHouseholdSize'",
          "coverage": ""
        },
        "41": {
          "source": "  , 'GuarantorEmployerIDNumber'",
          "coverage": ""
        },
        "42": {
          "source": "  , 'GuarantorMaritalStatusCode'",
          "coverage": ""
        },
        "43": {
          "source": "  , 'GuarantorHireEffectiveDate'",
          "coverage": ""
        },
        "44": {
          "source": "  , 'EmploymentStopDate'",
          "coverage": ""
        },
        "45": {
          "source": "  , 'LivingDependency'",
          "coverage": ""
        },
        "46": {
          "source": "  , 'AmbulatoryStatus'",
          "coverage": ""
        },
        "47": {
          "source": "  , 'Citizenship'",
          "coverage": ""
        },
        "48": {
          "source": "  , 'PrimaryLanguage'",
          "coverage": ""
        },
        "49": {
          "source": "  , 'LivingArrangement'",
          "coverage": ""
        },
        "50": {
          "source": "  , 'PublicityCode'",
          "coverage": ""
        },
        "51": {
          "source": "  , 'ProtectionIndicator'",
          "coverage": ""
        },
        "52": {
          "source": "  , 'StudentIndicator'",
          "coverage": ""
        },
        "53": {
          "source": "  , 'Religion'",
          "coverage": ""
        },
        "54": {
          "source": "  , 'MothersMaidenName'",
          "coverage": ""
        },
        "55": {
          "source": "  , 'Nationality'",
          "coverage": ""
        },
        "56": {
          "source": "  , 'EthnicGroup'",
          "coverage": ""
        },
        "57": {
          "source": "  , 'ContactPersonsName'",
          "coverage": ""
        },
        "58": {
          "source": "  , 'ContactPersonsTelephoneNumber'",
          "coverage": ""
        },
        "59": {
          "source": "  , 'ContactReason'",
          "coverage": ""
        },
        "60": {
          "source": "  , 'ContactRelationship'",
          "coverage": ""
        },
        "61": {
          "source": "  , 'JobTitle'",
          "coverage": ""
        },
        "62": {
          "source": "  , 'JobCodeClass'",
          "coverage": ""
        },
        "63": {
          "source": "  , 'GuarantorEmployersOrganizationName'",
          "coverage": ""
        },
        "64": {
          "source": "  , 'Handicap'",
          "coverage": ""
        },
        "65": {
          "source": "  , 'JobStatus'",
          "coverage": ""
        },
        "66": {
          "source": "  , 'GuarantorFinancialClass'",
          "coverage": ""
        },
        "67": {
          "source": "  , 'GuarantorRace'",
          "coverage": ""
        },
        "68": {
          "source": "]",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/in1.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "exports.name = 'IN1'",
          "coverage": 1
        },
        "2": {
          "source": "",
          "coverage": ""
        },
        "3": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "4": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "5": {
          "source": "  , 'SetID'",
          "coverage": ""
        },
        "6": {
          "source": "  , 'InsurancePlanID'",
          "coverage": ""
        },
        "7": {
          "source": "  , 'InsuranceCompanyID'",
          "coverage": ""
        },
        "8": {
          "source": "  , 'InsuranceCompanyName'",
          "coverage": ""
        },
        "9": {
          "source": "  , 'InsuranceCompanyAddress'",
          "coverage": ""
        },
        "10": {
          "source": "  , 'InsuranceCoContactPerson'",
          "coverage": ""
        },
        "11": {
          "source": "  , 'InsuranceCoPhoneNumber'",
          "coverage": ""
        },
        "12": {
          "source": "  , 'GroupNumber'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'GroupName'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'InsuredsGroupEmpID'",
          "coverage": ""
        },
        "15": {
          "source": "  , 'InsuredsGroupEmpName'",
          "coverage": ""
        },
        "16": {
          "source": "  , 'PlanEffectiveDate'",
          "coverage": ""
        },
        "17": {
          "source": "  , 'PlanExpirationDate'",
          "coverage": ""
        },
        "18": {
          "source": "  , 'AuthorizationInformation'",
          "coverage": ""
        },
        "19": {
          "source": "  , 'PlanType'",
          "coverage": ""
        },
        "20": {
          "source": "  , 'NameOfInsured'",
          "coverage": ""
        },
        "21": {
          "source": "  , 'InsuredsRelationshipToPatient'",
          "coverage": ""
        },
        "22": {
          "source": "  , 'InsuredsDateOfBirth'",
          "coverage": ""
        },
        "23": {
          "source": "  , 'InsuredsAddress'",
          "coverage": ""
        },
        "24": {
          "source": "  , 'AssignmentOfBenefits'",
          "coverage": ""
        },
        "25": {
          "source": "  , 'CoordinationOfBenefits'",
          "coverage": ""
        },
        "26": {
          "source": "  , 'CoordOfBenPriority'",
          "coverage": ""
        },
        "27": {
          "source": "  , 'NoticeOfAdmissionFlag'",
          "coverage": ""
        },
        "28": {
          "source": "  , 'NoticeOfAdmissionDate'",
          "coverage": ""
        },
        "29": {
          "source": "  , 'ReportOfEligibilityFlag'",
          "coverage": ""
        },
        "30": {
          "source": "  , 'ReportOfEligibilityDate'",
          "coverage": ""
        },
        "31": {
          "source": "  , 'ReleaseInformationCode'",
          "coverage": ""
        },
        "32": {
          "source": "  , 'PreAdmitCert'",
          "coverage": ""
        },
        "33": {
          "source": "  , 'VerificationDateTime'",
          "coverage": ""
        },
        "34": {
          "source": "  , 'VerificationBy'",
          "coverage": ""
        },
        "35": {
          "source": "  , 'TypeOfAgreementCode'",
          "coverage": ""
        },
        "36": {
          "source": "  , 'BillingStatus'",
          "coverage": ""
        },
        "37": {
          "source": "  , 'LifetimeReserveDays'",
          "coverage": ""
        },
        "38": {
          "source": "  , 'DelayBeforeLRDay'",
          "coverage": ""
        },
        "39": {
          "source": "  , 'CompanyPlanCode'",
          "coverage": ""
        },
        "40": {
          "source": "  , 'PolicyNumber'",
          "coverage": ""
        },
        "41": {
          "source": "  , 'PolicyDeductible'",
          "coverage": ""
        },
        "42": {
          "source": "  , 'PolicyLimitAmount'",
          "coverage": ""
        },
        "43": {
          "source": "  , 'PolicyLimitDays'",
          "coverage": ""
        },
        "44": {
          "source": "  , 'RoomRateSemiPrivate'",
          "coverage": ""
        },
        "45": {
          "source": "  , 'RoomRatePrivate'",
          "coverage": ""
        },
        "46": {
          "source": "  , 'InsuredsEmploymentStatus'",
          "coverage": ""
        },
        "47": {
          "source": "  , 'InsuredsSex'",
          "coverage": ""
        },
        "48": {
          "source": "  , 'InsuredsEmployersAddress'",
          "coverage": ""
        },
        "49": {
          "source": "  , 'VerificationStatus'",
          "coverage": ""
        },
        "50": {
          "source": "  , 'PriorInsurancePlanID'",
          "coverage": ""
        },
        "51": {
          "source": "  , 'CoverageType'",
          "coverage": ""
        },
        "52": {
          "source": "  , 'Handicap'",
          "coverage": ""
        },
        "53": {
          "source": "  , 'InsuredsIDNumber'",
          "coverage": ""
        },
        "54": {
          "source": "]",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/in2.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// IN2 Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'IN2'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'InsuredsEmployeeID'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'InsuredsSocialSecurityNumber'",
          "coverage": ""
        },
        "15": {
          "source": "  , 'InsuredsEmployersNameandID'",
          "coverage": ""
        },
        "16": {
          "source": "  , 'EmployerInformationData'",
          "coverage": ""
        },
        "17": {
          "source": "  , 'MailClaimParty'",
          "coverage": ""
        },
        "18": {
          "source": "  , 'MedicareHealthInsCardNumber'",
          "coverage": ""
        },
        "19": {
          "source": "  , 'MedicaidCaseName'",
          "coverage": ""
        },
        "20": {
          "source": "  , 'MedicaidCaseNumber'",
          "coverage": ""
        },
        "21": {
          "source": "  , 'MilitarySponsorName'",
          "coverage": ""
        },
        "22": {
          "source": "  , 'MilitaryIDNumber'",
          "coverage": ""
        },
        "23": {
          "source": "  , 'DependentOfMilitaryRecipient'",
          "coverage": ""
        },
        "24": {
          "source": "  , 'MilitaryOrganization'",
          "coverage": ""
        },
        "25": {
          "source": "  , 'MilitaryStation'",
          "coverage": ""
        },
        "26": {
          "source": "  , 'MilitaryService'",
          "coverage": ""
        },
        "27": {
          "source": "  , 'MilitaryRankGrade'",
          "coverage": ""
        },
        "28": {
          "source": "  , 'MilitaryStatus'",
          "coverage": ""
        },
        "29": {
          "source": "  , 'MilitaryRetireDate'",
          "coverage": ""
        },
        "30": {
          "source": "  , 'MilitaryNonAvailCertOnFile'",
          "coverage": ""
        },
        "31": {
          "source": "  , 'BabyCoverage'",
          "coverage": ""
        },
        "32": {
          "source": "  , 'CombineBabyBill'",
          "coverage": ""
        },
        "33": {
          "source": "  , 'BloodDeductible'",
          "coverage": ""
        },
        "34": {
          "source": "  , 'SpecialCoverageApprovalName'",
          "coverage": ""
        },
        "35": {
          "source": "  , 'SpecialCoverageApprovalTitle'",
          "coverage": ""
        },
        "36": {
          "source": "  , 'NonCoveredInsuranceCode'",
          "coverage": ""
        },
        "37": {
          "source": "  , 'PayorID'",
          "coverage": ""
        },
        "38": {
          "source": "  , 'PayorSubscriberID'",
          "coverage": ""
        },
        "39": {
          "source": "  , 'EligibilitySource'",
          "coverage": ""
        },
        "40": {
          "source": "  , 'RoomCoverageTypeAmount'",
          "coverage": ""
        },
        "41": {
          "source": "  , 'PolicyTypeAmount'",
          "coverage": ""
        },
        "42": {
          "source": "  , 'DailyDeductible'",
          "coverage": ""
        },
        "43": {
          "source": "  , 'LivingDependency'",
          "coverage": ""
        },
        "44": {
          "source": "  , 'AmbulatoryStatus'",
          "coverage": ""
        },
        "45": {
          "source": "  , 'Citizenship'",
          "coverage": ""
        },
        "46": {
          "source": "  , 'PrimaryLanguage'",
          "coverage": ""
        },
        "47": {
          "source": "  , 'LivingArrangement'",
          "coverage": ""
        },
        "48": {
          "source": "  , 'PublicityCode'",
          "coverage": ""
        },
        "49": {
          "source": "  , 'ProtectionIndicator'",
          "coverage": ""
        },
        "50": {
          "source": "  , 'StudentIndicator'",
          "coverage": ""
        },
        "51": {
          "source": "  , 'Religion'",
          "coverage": ""
        },
        "52": {
          "source": "  , 'MothersMaidenName'",
          "coverage": ""
        },
        "53": {
          "source": "  , 'Nationality'",
          "coverage": ""
        },
        "54": {
          "source": "  , 'EthnicGroup'",
          "coverage": ""
        },
        "55": {
          "source": "  , 'MaritalStatus'",
          "coverage": ""
        },
        "56": {
          "source": "  , 'InsuredsEmploymentStartDate'",
          "coverage": ""
        },
        "57": {
          "source": "  , 'EmploymentStopDate'",
          "coverage": ""
        },
        "58": {
          "source": "  , 'JobTitle'",
          "coverage": ""
        },
        "59": {
          "source": "  , 'JobCodeClass'",
          "coverage": ""
        },
        "60": {
          "source": "  , 'JobStatus'",
          "coverage": ""
        },
        "61": {
          "source": "  , 'EmployerContactPersonName'",
          "coverage": ""
        },
        "62": {
          "source": "  , 'EmployerContactPersonPhoneNumber'",
          "coverage": ""
        },
        "63": {
          "source": "  , 'EmployerContactReason'",
          "coverage": ""
        },
        "64": {
          "source": "  , 'InsuredsContactPersonsName'",
          "coverage": ""
        },
        "65": {
          "source": "  , 'InsuredsContactPersonPhoneNumber'",
          "coverage": ""
        },
        "66": {
          "source": "  , 'InsuredsContactPersonReason'",
          "coverage": ""
        },
        "67": {
          "source": "  , 'RelationshipToThePatientStartDate'",
          "coverage": ""
        },
        "68": {
          "source": "  , 'RelationshipToThePatientStopDate'",
          "coverage": ""
        },
        "69": {
          "source": "  , 'InsuranceCoContactReason'",
          "coverage": ""
        },
        "70": {
          "source": "  , 'InsuranceCoContactPhoneNumber'",
          "coverage": ""
        },
        "71": {
          "source": "  , 'PolicyScope'",
          "coverage": ""
        },
        "72": {
          "source": "  , 'PolicySource'",
          "coverage": ""
        },
        "73": {
          "source": "  , 'PatientMemberNumber'",
          "coverage": ""
        },
        "74": {
          "source": "  , 'GuarantorsRelationshipToInsured'",
          "coverage": ""
        },
        "75": {
          "source": "  , 'InsuredsPhoneNumberHome'",
          "coverage": ""
        },
        "76": {
          "source": "  , 'InsuredsEmployerPhoneNumber'",
          "coverage": ""
        },
        "77": {
          "source": "  , 'MilitaryHandicappedProgram'",
          "coverage": ""
        },
        "78": {
          "source": "  , 'SuspendFlag'",
          "coverage": ""
        },
        "79": {
          "source": "  , 'CopayLimitFlag'",
          "coverage": ""
        },
        "80": {
          "source": "  , 'StoplossLimitFlag'",
          "coverage": ""
        },
        "81": {
          "source": "  , 'InsuredOrganizationNameAndID'",
          "coverage": ""
        },
        "82": {
          "source": "  , 'InsuredEmployerOrganizationNameAndID'",
          "coverage": ""
        },
        "83": {
          "source": "  , 'Race'",
          "coverage": ""
        },
        "84": {
          "source": "  , 'HCFAPatientsRelationshiptoInsured'",
          "coverage": ""
        },
        "85": {
          "source": "]",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/mrg.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// MRG Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'MRG'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'PriorPatientIdentifierList'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'PriorAlternatePatientID'",
          "coverage": ""
        },
        "15": {
          "source": "  , 'PriorPatientAccountNumber'",
          "coverage": ""
        },
        "16": {
          "source": "  , 'PriorPatientID'",
          "coverage": ""
        },
        "17": {
          "source": "  , 'PriorVisitNumber'",
          "coverage": ""
        },
        "18": {
          "source": "  , 'PriorAlternateVisitID'",
          "coverage": ""
        },
        "19": {
          "source": "  , 'PriorPatientName'",
          "coverage": ""
        },
        "20": {
          "source": "]",
          "coverage": ""
        },
        "21": {
          "source": "",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/msa.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// MSA Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'MSA'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'AcknowledgementCode'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'ControlID'",
          "coverage": ""
        },
        "15": {
          "source": "  , 'TextMessage'",
          "coverage": ""
        },
        "16": {
          "source": "  , 'ExpectedSequenceNumber'",
          "coverage": ""
        },
        "17": {
          "source": "  , 'DelayedAcknowledgementType'",
          "coverage": ""
        },
        "18": {
          "source": "  , 'ErrorCondition'",
          "coverage": ""
        },
        "19": {
          "source": "]",
          "coverage": ""
        },
        "20": {
          "source": "",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/msh.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// MSH Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'MSH'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'EncodingCharacters'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'SendingApplication'",
          "coverage": ""
        },
        "15": {
          "source": "  , 'SendingFacility'",
          "coverage": ""
        },
        "16": {
          "source": "  , 'ReceivingApplication'",
          "coverage": ""
        },
        "17": {
          "source": "  , 'ReceivingFacility'",
          "coverage": ""
        },
        "18": {
          "source": "  , 'DateTime'",
          "coverage": ""
        },
        "19": {
          "source": "  , 'Security'",
          "coverage": ""
        },
        "20": {
          "source": "  , 'MessageType'",
          "coverage": ""
        },
        "21": {
          "source": "  , 'MessageControlID'",
          "coverage": ""
        },
        "22": {
          "source": "  , 'ProcessingID'",
          "coverage": ""
        },
        "23": {
          "source": "  , 'VersionID'",
          "coverage": ""
        },
        "24": {
          "source": "  , 'SequenceNumber'",
          "coverage": ""
        },
        "25": {
          "source": "  , 'ContinuationPointer'",
          "coverage": ""
        },
        "26": {
          "source": "  , 'AcceptAcknowledgementType'",
          "coverage": ""
        },
        "27": {
          "source": "  , 'ApplicationAcknowledgementType'",
          "coverage": ""
        },
        "28": {
          "source": "  , 'CountryCode'",
          "coverage": ""
        },
        "29": {
          "source": "  , 'CharacterSet'",
          "coverage": ""
        },
        "30": {
          "source": "  , 'PrincipalLanguage'",
          "coverage": ""
        },
        "31": {
          "source": "  , 'AlternateCharacterSetHandlingScheme'",
          "coverage": ""
        },
        "32": {
          "source": "]",
          "coverage": ""
        },
        "33": {
          "source": "",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/nk1.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// NK1 Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'NK1'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'SetID'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'Name'",
          "coverage": ""
        },
        "15": {
          "source": "  , 'Relationship'",
          "coverage": ""
        },
        "16": {
          "source": "  , 'Address'",
          "coverage": ""
        },
        "17": {
          "source": "  , 'PhoneNumber'",
          "coverage": ""
        },
        "18": {
          "source": "  , 'BusinessPhoneNumber'",
          "coverage": ""
        },
        "19": {
          "source": "  , 'ContactRole'",
          "coverage": ""
        },
        "20": {
          "source": "  , 'StartDate'",
          "coverage": ""
        },
        "21": {
          "source": "  , 'EndDate'",
          "coverage": ""
        },
        "22": {
          "source": "  , 'NextOfKinJobTitle'",
          "coverage": ""
        },
        "23": {
          "source": "  , 'NextOfKinJobCodeClass'",
          "coverage": ""
        },
        "24": {
          "source": "  , 'NextOfKinEmployeeNumber'",
          "coverage": ""
        },
        "25": {
          "source": "  , 'OrganizationName'",
          "coverage": ""
        },
        "26": {
          "source": "  , 'MaritalStatus'",
          "coverage": ""
        },
        "27": {
          "source": "  , 'Sex'",
          "coverage": ""
        },
        "28": {
          "source": "  , 'BirthDate'",
          "coverage": ""
        },
        "29": {
          "source": "  , 'LivingDependency'",
          "coverage": ""
        },
        "30": {
          "source": "  , 'AmbulatoryStatus'",
          "coverage": ""
        },
        "31": {
          "source": "  , 'Citizenship'",
          "coverage": ""
        },
        "32": {
          "source": "  , 'PrimaryLanguage'",
          "coverage": ""
        },
        "33": {
          "source": "  , 'LivingArrangement'",
          "coverage": ""
        },
        "34": {
          "source": "  , 'PublicityCode'",
          "coverage": ""
        },
        "35": {
          "source": "  , 'ProtectionIndicator'",
          "coverage": ""
        },
        "36": {
          "source": "  , 'StudentIndicator'",
          "coverage": ""
        },
        "37": {
          "source": "  , 'Religion'",
          "coverage": ""
        },
        "38": {
          "source": "  , 'MotherMaidenName'",
          "coverage": ""
        },
        "39": {
          "source": "  , 'Nationality'",
          "coverage": ""
        },
        "40": {
          "source": "  , 'EthnicGroup'",
          "coverage": ""
        },
        "41": {
          "source": "  , 'ContactReason'",
          "coverage": ""
        },
        "42": {
          "source": "  , 'ContactPersonName'",
          "coverage": ""
        },
        "43": {
          "source": "  , 'ContactPersonPhoneNumber'",
          "coverage": ""
        },
        "44": {
          "source": "  , 'ContactPersonAddress'",
          "coverage": ""
        },
        "45": {
          "source": "  , 'NextOfKinIdentifiers'",
          "coverage": ""
        },
        "46": {
          "source": "  , 'JobStatus'",
          "coverage": ""
        },
        "47": {
          "source": "  , 'Race'",
          "coverage": ""
        },
        "48": {
          "source": "  , 'Handicap'",
          "coverage": ""
        },
        "49": {
          "source": "  , 'ContactPersonSSN'",
          "coverage": ""
        },
        "50": {
          "source": "]",
          "coverage": ""
        },
        "51": {
          "source": "",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/npu.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// NPU Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'NPU'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'BedLocation'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'BedStatus'",
          "coverage": ""
        },
        "15": {
          "source": "]",
          "coverage": ""
        },
        "16": {
          "source": "",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/nte.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// NTE Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'NTE'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'SetID'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'SourceOfComment'",
          "coverage": ""
        },
        "15": {
          "source": "  , 'Comment'",
          "coverage": ""
        },
        "16": {
          "source": "  , 'CommentType'",
          "coverage": ""
        },
        "17": {
          "source": "]",
          "coverage": ""
        },
        "18": {
          "source": "",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/obr.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// OBR Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'OBR'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'SetID'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'PlacerOrderNumber'",
          "coverage": ""
        },
        "15": {
          "source": "  , 'FillerOrderNumber'",
          "coverage": ""
        },
        "16": {
          "source": "  , 'UniversalServiceID'",
          "coverage": ""
        },
        "17": {
          "source": "  , 'Priority'",
          "coverage": ""
        },
        "18": {
          "source": "  , 'RequestedDateTime'",
          "coverage": ""
        },
        "19": {
          "source": "  , 'ObservationDateTime'",
          "coverage": ""
        },
        "20": {
          "source": "  , 'ObservationEndDateTime'",
          "coverage": ""
        },
        "21": {
          "source": "  , 'CollectionVolume'",
          "coverage": ""
        },
        "22": {
          "source": "  , 'CollectorIdentifier'",
          "coverage": ""
        },
        "23": {
          "source": "  , 'SpecimenActionCode'",
          "coverage": ""
        },
        "24": {
          "source": "  , 'DangerCode'",
          "coverage": ""
        },
        "25": {
          "source": "  , 'RelevantClinicalInfo.'",
          "coverage": ""
        },
        "26": {
          "source": "  , 'SpecimenReceivedDateTime'",
          "coverage": ""
        },
        "27": {
          "source": "  , 'SpecimenSource'",
          "coverage": ""
        },
        "28": {
          "source": "  , 'OrderingProvider'",
          "coverage": ""
        },
        "29": {
          "source": "  , 'OrderCallbackPhoneNumber'",
          "coverage": ""
        },
        "30": {
          "source": "  , 'PlacerField1'",
          "coverage": ""
        },
        "31": {
          "source": "  , 'PlacerField2'",
          "coverage": ""
        },
        "32": {
          "source": "  , 'FillerField1'",
          "coverage": ""
        },
        "33": {
          "source": "  , 'FillerField2'",
          "coverage": ""
        },
        "34": {
          "source": "  , 'ResultsRptStatusChngDateTime'",
          "coverage": ""
        },
        "35": {
          "source": "  , 'ChargeToPractice'",
          "coverage": ""
        },
        "36": {
          "source": "  , 'DiagnosticServSectID'",
          "coverage": ""
        },
        "37": {
          "source": "  , 'ResultStatus'",
          "coverage": ""
        },
        "38": {
          "source": "  , 'ParentResult'",
          "coverage": ""
        },
        "39": {
          "source": "  , 'QuantityTiming'",
          "coverage": ""
        },
        "40": {
          "source": "  , 'ResultCopiesTo'",
          "coverage": ""
        },
        "41": {
          "source": "  , 'Parent'",
          "coverage": ""
        },
        "42": {
          "source": "  , 'TransportationMode'",
          "coverage": ""
        },
        "43": {
          "source": "  , 'ReasonForStudy'",
          "coverage": ""
        },
        "44": {
          "source": "  , 'PrincipalResultInterpreter'",
          "coverage": ""
        },
        "45": {
          "source": "  , 'AssistantResultInterpreter'",
          "coverage": ""
        },
        "46": {
          "source": "  , 'Technician'",
          "coverage": ""
        },
        "47": {
          "source": "  , 'Transcriptionist'",
          "coverage": ""
        },
        "48": {
          "source": "  , 'ScheduledDateTime'",
          "coverage": ""
        },
        "49": {
          "source": "  , 'NumberofSampleContainers'",
          "coverage": ""
        },
        "50": {
          "source": "  , 'TransportLogisticsOfCollectedSample'",
          "coverage": ""
        },
        "51": {
          "source": "  , 'CollectorsComment'",
          "coverage": ""
        },
        "52": {
          "source": "  , 'TransportArrangementResponsibility'",
          "coverage": ""
        },
        "53": {
          "source": "  , 'TransportArranged'",
          "coverage": ""
        },
        "54": {
          "source": "  , 'EscortRequired'",
          "coverage": ""
        },
        "55": {
          "source": "  , 'PlannedPatientTransportComment'",
          "coverage": ""
        },
        "56": {
          "source": "  , 'ProcedureCode'",
          "coverage": ""
        },
        "57": {
          "source": "  , 'ProcedureCodeModifier'",
          "coverage": ""
        },
        "58": {
          "source": "]",
          "coverage": ""
        },
        "59": {
          "source": "",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/obx.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// OBX Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'OBX'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'SetID'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'ValueType'",
          "coverage": ""
        },
        "15": {
          "source": "  , 'ObservationIdentifier'",
          "coverage": ""
        },
        "16": {
          "source": "  , 'ObservationSubID'",
          "coverage": ""
        },
        "17": {
          "source": "  , 'ObservationValue'",
          "coverage": ""
        },
        "18": {
          "source": "  , 'Units'",
          "coverage": ""
        },
        "19": {
          "source": "  , 'ReferencesRange'",
          "coverage": ""
        },
        "20": {
          "source": "  , 'AbnormalFlags'",
          "coverage": ""
        },
        "21": {
          "source": "  , 'Probability'",
          "coverage": ""
        },
        "22": {
          "source": "  , 'NatureofAbnormalTest'",
          "coverage": ""
        },
        "23": {
          "source": "  , 'ObservationResultStatus'",
          "coverage": ""
        },
        "24": {
          "source": "  , 'DateLastObsNormalValues'",
          "coverage": ""
        },
        "25": {
          "source": "  , 'UserDefinedAccessChecks'",
          "coverage": ""
        },
        "26": {
          "source": "  , 'DateTimeoftheObservation'",
          "coverage": ""
        },
        "27": {
          "source": "  , 'ProducerID'",
          "coverage": ""
        },
        "28": {
          "source": "  , 'ResponsibleObserver'",
          "coverage": ""
        },
        "29": {
          "source": "  , 'ObservationMethod'",
          "coverage": ""
        },
        "30": {
          "source": "]",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/ods.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// ODS Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'ODS'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'Type'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'ServicePeriod'",
          "coverage": ""
        },
        "15": {
          "source": "  , 'DietSupplementOrPreferenceCode'",
          "coverage": ""
        },
        "16": {
          "source": "  , 'TextInstruction'",
          "coverage": ""
        },
        "17": {
          "source": "]",
          "coverage": ""
        },
        "18": {
          "source": "",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/odt.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// ODT Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'ODT'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'TrayType'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'ServicePeriod'",
          "coverage": ""
        },
        "15": {
          "source": "  , 'InputParameterList'",
          "coverage": ""
        },
        "16": {
          "source": "]",
          "coverage": ""
        },
        "17": {
          "source": "",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/orc.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// ORC Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'ORC'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'OrderControl'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'PlacerOrderNumber'",
          "coverage": ""
        },
        "15": {
          "source": "  , 'FillerOrderNumber'",
          "coverage": ""
        },
        "16": {
          "source": "  , 'PlacerGroupNumber'",
          "coverage": ""
        },
        "17": {
          "source": "  , 'OrderStatus'",
          "coverage": ""
        },
        "18": {
          "source": "  , 'ResponseFlag'",
          "coverage": ""
        },
        "19": {
          "source": "  , 'QuantityTiming'",
          "coverage": ""
        },
        "20": {
          "source": "  , 'Parent'",
          "coverage": ""
        },
        "21": {
          "source": "  , 'DateTimeofTransaction'",
          "coverage": ""
        },
        "22": {
          "source": "  , 'EnteredBy'",
          "coverage": ""
        },
        "23": {
          "source": "  , 'VerifiedBy'",
          "coverage": ""
        },
        "24": {
          "source": "  , 'OrderingProvider'",
          "coverage": ""
        },
        "25": {
          "source": "  , 'Enterer&#226;&#128;&#153;sLocation'",
          "coverage": ""
        },
        "26": {
          "source": "  , 'CallBackPhoneNumber'",
          "coverage": ""
        },
        "27": {
          "source": "  , 'OrderEffectiveDateTime'",
          "coverage": ""
        },
        "28": {
          "source": "  , 'OrderControlCodeReasonEnteringOrganization'",
          "coverage": ""
        },
        "29": {
          "source": "  , 'EnteringDevice'",
          "coverage": ""
        },
        "30": {
          "source": "  , 'ActionBy'",
          "coverage": ""
        },
        "31": {
          "source": "  , 'AdvancedBeneficiaryNoticeCodeOrderingFacilityName'",
          "coverage": ""
        },
        "32": {
          "source": "  , 'OrderingFacilityAddress'",
          "coverage": ""
        },
        "33": {
          "source": "  , 'OrderingFacilityPhoneNumberOrderingProviderAddress'",
          "coverage": ""
        },
        "34": {
          "source": "]",
          "coverage": ""
        },
        "35": {
          "source": "",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/pd1.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// PD1 Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'PD1'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'LivinDependency'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'LivingArrangement'",
          "coverage": ""
        },
        "15": {
          "source": "  , 'PatientPrimaryFacility'",
          "coverage": ""
        },
        "16": {
          "source": "  , 'PatientPrimaryCareProviderNameID'",
          "coverage": ""
        },
        "17": {
          "source": "  , 'StudentIndicator'",
          "coverage": ""
        },
        "18": {
          "source": "  , 'Handicap'",
          "coverage": ""
        },
        "19": {
          "source": "  , 'LivingWill'",
          "coverage": ""
        },
        "20": {
          "source": "  , 'OrganDonor'",
          "coverage": ""
        },
        "21": {
          "source": "  , 'SeparateBill'",
          "coverage": ""
        },
        "22": {
          "source": "  , 'DuplicatePatient'",
          "coverage": ""
        },
        "23": {
          "source": "  , 'PublicityCode'",
          "coverage": ""
        },
        "24": {
          "source": "  , 'ProtectionIndicator'",
          "coverage": ""
        },
        "25": {
          "source": "]",
          "coverage": ""
        },
        "26": {
          "source": "",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/pid.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// PID Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'PID'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'SetID'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'PatientID'",
          "coverage": ""
        },
        "15": {
          "source": "  , 'PatientIDList'",
          "coverage": ""
        },
        "16": {
          "source": "  , 'AlternatePatientID'",
          "coverage": ""
        },
        "17": {
          "source": "  , 'PatientName'",
          "coverage": ""
        },
        "18": {
          "source": "  , 'MothersMaidenName'",
          "coverage": ""
        },
        "19": {
          "source": "  , 'DateOfBirth'",
          "coverage": ""
        },
        "20": {
          "source": "  , 'Sex'",
          "coverage": ""
        },
        "21": {
          "source": "  , 'Alias'",
          "coverage": ""
        },
        "22": {
          "source": "  , 'Race'",
          "coverage": ""
        },
        "23": {
          "source": "  , 'Address'",
          "coverage": ""
        },
        "24": {
          "source": "  , 'CountyCode'",
          "coverage": ""
        },
        "25": {
          "source": "  , 'PhoneNumberHome'",
          "coverage": ""
        },
        "26": {
          "source": "  , 'PhoneNumberBusiness'",
          "coverage": ""
        },
        "27": {
          "source": "  , 'PrimaryLanguage'",
          "coverage": ""
        },
        "28": {
          "source": "  , 'MaritalStatus'",
          "coverage": ""
        },
        "29": {
          "source": "  , 'Religion'",
          "coverage": ""
        },
        "30": {
          "source": "  , 'PatientAccountNumber'",
          "coverage": ""
        },
        "31": {
          "source": "  , 'SSN'",
          "coverage": ""
        },
        "32": {
          "source": "  , 'DriverLicenseNumber'",
          "coverage": ""
        },
        "33": {
          "source": "  , 'MothersID'",
          "coverage": ""
        },
        "34": {
          "source": "  , 'EthnicGroup'",
          "coverage": ""
        },
        "35": {
          "source": "  , 'BirthPlace'",
          "coverage": ""
        },
        "36": {
          "source": "  , 'MultipleBirthIndicator'",
          "coverage": ""
        },
        "37": {
          "source": "  , 'BirthOrder'",
          "coverage": ""
        },
        "38": {
          "source": "  , 'Citizenship'",
          "coverage": ""
        },
        "39": {
          "source": "  , 'VeteransMilitaryStatus'",
          "coverage": ""
        },
        "40": {
          "source": "  , 'Nationality'",
          "coverage": ""
        },
        "41": {
          "source": "  , 'DeathDateTime'",
          "coverage": ""
        },
        "42": {
          "source": "  , 'DeathIndicator'",
          "coverage": ""
        },
        "43": {
          "source": "]",
          "coverage": ""
        },
        "44": {
          "source": "",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/pr1.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// PR1 Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'PR1'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'SetID'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'ProcedureCodingMethod'",
          "coverage": ""
        },
        "15": {
          "source": "  , 'ProcedureCode'",
          "coverage": ""
        },
        "16": {
          "source": "  , 'ProcedureDescription'",
          "coverage": ""
        },
        "17": {
          "source": "  , 'ProcedureDateTime'",
          "coverage": ""
        },
        "18": {
          "source": "  , 'ProcedureFunctionalType'",
          "coverage": ""
        },
        "19": {
          "source": "  , 'ProcedureMinutes'",
          "coverage": ""
        },
        "20": {
          "source": "  , 'Anesthesiologist'",
          "coverage": ""
        },
        "21": {
          "source": "  , 'AnesthesiaCode'",
          "coverage": ""
        },
        "22": {
          "source": "  , 'AnesthesiaMinutes'",
          "coverage": ""
        },
        "23": {
          "source": "  , 'Surgeon'",
          "coverage": ""
        },
        "24": {
          "source": "  , 'ProcedurePractitioner'",
          "coverage": ""
        },
        "25": {
          "source": "  , 'ConsentCode'",
          "coverage": ""
        },
        "26": {
          "source": "  , 'ProcedurePriority'",
          "coverage": ""
        },
        "27": {
          "source": "  , 'AssociatedDiagnosisCode'",
          "coverage": ""
        },
        "28": {
          "source": "  , 'ProcedureCodeModifier'",
          "coverage": ""
        },
        "29": {
          "source": "]",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/pv1.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// PV1 Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'PV1'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'SetID'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'AssignedPatientLocation'",
          "coverage": ""
        },
        "15": {
          "source": "  , 'AdmissionType'",
          "coverage": ""
        },
        "16": {
          "source": "  , 'PreadmitNumber'",
          "coverage": ""
        },
        "17": {
          "source": "  , 'PriorPatientLocation'",
          "coverage": ""
        },
        "18": {
          "source": "  , 'AttendingDoctor'",
          "coverage": ""
        },
        "19": {
          "source": "  , 'ReferringDoctor'",
          "coverage": ""
        },
        "20": {
          "source": "  , 'ConsultingDoctor'",
          "coverage": ""
        },
        "21": {
          "source": "  , 'HospitalService'",
          "coverage": ""
        },
        "22": {
          "source": "  , 'TemporaryLocation'",
          "coverage": ""
        },
        "23": {
          "source": "  , 'PreadmitTestIndicator'",
          "coverage": ""
        },
        "24": {
          "source": "  , 'ReadmissionIndicator'",
          "coverage": ""
        },
        "25": {
          "source": "  , 'AdmitSource'",
          "coverage": ""
        },
        "26": {
          "source": "  , 'AmbulatoryStatus'",
          "coverage": ""
        },
        "27": {
          "source": "  , 'VIPIndicator'",
          "coverage": ""
        },
        "28": {
          "source": "  , 'AdmittingDoctor'",
          "coverage": ""
        },
        "29": {
          "source": "  , 'PatientType'",
          "coverage": ""
        },
        "30": {
          "source": "  , 'VisitNumber'",
          "coverage": ""
        },
        "31": {
          "source": "  , 'FinancialClass'",
          "coverage": ""
        },
        "32": {
          "source": "  , 'ChargePriceIndicator'",
          "coverage": ""
        },
        "33": {
          "source": "  , 'CourtesyCode'",
          "coverage": ""
        },
        "34": {
          "source": "  , 'CreditRating'",
          "coverage": ""
        },
        "35": {
          "source": "  , 'ContractCode'",
          "coverage": ""
        },
        "36": {
          "source": "  , 'ContractEffectiveDate'",
          "coverage": ""
        },
        "37": {
          "source": "  , 'ContractAmount'",
          "coverage": ""
        },
        "38": {
          "source": "  , 'ContactPeriod'",
          "coverage": ""
        },
        "39": {
          "source": "  , 'InterestCode'",
          "coverage": ""
        },
        "40": {
          "source": "  , 'TransferToBadDebtCode'",
          "coverage": ""
        },
        "41": {
          "source": "  , 'TransferToBadDebtDate'",
          "coverage": ""
        },
        "42": {
          "source": "  , 'BadDebtAgencyCode'",
          "coverage": ""
        },
        "43": {
          "source": "  , 'BadDebtTransferAmount'",
          "coverage": ""
        },
        "44": {
          "source": "  , 'BadDebtRecoveryAmount'",
          "coverage": ""
        },
        "45": {
          "source": "  , 'DeleteAccountIndicator'",
          "coverage": ""
        },
        "46": {
          "source": "  , 'DeleteAccountDate'",
          "coverage": ""
        },
        "47": {
          "source": "  , 'DischargeDisposition'",
          "coverage": ""
        },
        "48": {
          "source": "  , 'DischargedToLocation'",
          "coverage": ""
        },
        "49": {
          "source": "  , 'DietType'",
          "coverage": ""
        },
        "50": {
          "source": "  , 'ServicingFacility'",
          "coverage": ""
        },
        "51": {
          "source": "  , 'BedStatus'",
          "coverage": ""
        },
        "52": {
          "source": "  , 'AccountStatus'",
          "coverage": ""
        },
        "53": {
          "source": "  , 'PendingLocation'",
          "coverage": ""
        },
        "54": {
          "source": "  , 'PriorTemporaryLocation'",
          "coverage": ""
        },
        "55": {
          "source": "  , 'AdmitDateTime'",
          "coverage": ""
        },
        "56": {
          "source": "  , 'DischargeDateTime'",
          "coverage": ""
        },
        "57": {
          "source": "  , 'CurrentPatientBalance'",
          "coverage": ""
        },
        "58": {
          "source": "  , 'TotalCharges'",
          "coverage": ""
        },
        "59": {
          "source": "  , 'TotalAdjustments'",
          "coverage": ""
        },
        "60": {
          "source": "  , 'TotalPayments'",
          "coverage": ""
        },
        "61": {
          "source": "  , 'AlternateVisitID'",
          "coverage": ""
        },
        "62": {
          "source": "  , 'VisitIndicator'",
          "coverage": ""
        },
        "63": {
          "source": "  , 'OtherHealthcareProvider'",
          "coverage": ""
        },
        "64": {
          "source": "]",
          "coverage": ""
        },
        "65": {
          "source": "",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/pv2.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// PV2 Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'PV2'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'PriorPendingLocation'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'AccommdationCode'",
          "coverage": ""
        },
        "15": {
          "source": "  , 'AdmitReason'",
          "coverage": ""
        },
        "16": {
          "source": "  , 'TransferReason'",
          "coverage": ""
        },
        "17": {
          "source": "  , 'PatientValuables'",
          "coverage": ""
        },
        "18": {
          "source": "  , 'PatientValuablesLocation'",
          "coverage": ""
        },
        "19": {
          "source": "  , 'VisitUserCode'",
          "coverage": ""
        },
        "20": {
          "source": "  , 'ExpectedAdmitDateTime'",
          "coverage": ""
        },
        "21": {
          "source": "  , 'ExpectedDischargeDateTime'",
          "coverage": ""
        },
        "22": {
          "source": "  , 'EstimatedLengthOfInpatientStay'",
          "coverage": ""
        },
        "23": {
          "source": "  , 'ActualLengthOfInpatientStay'",
          "coverage": ""
        },
        "24": {
          "source": "  , 'VisitDescription'",
          "coverage": ""
        },
        "25": {
          "source": "  , 'ReferralSourceCode'",
          "coverage": ""
        },
        "26": {
          "source": "  , 'PreviousServiceDate'",
          "coverage": ""
        },
        "27": {
          "source": "  , 'EmploymentIllnessRelatedIndicator'",
          "coverage": ""
        },
        "28": {
          "source": "  , 'PurgeStatusCode'",
          "coverage": ""
        },
        "29": {
          "source": "  , 'PurgeStatusDate'",
          "coverage": ""
        },
        "30": {
          "source": "  , 'SpecialProgramCode'",
          "coverage": ""
        },
        "31": {
          "source": "  , 'RetentionIndicator'",
          "coverage": ""
        },
        "32": {
          "source": "  , 'ExpectedNumberOfInsurancePlans'",
          "coverage": ""
        },
        "33": {
          "source": "  , 'VisitPublicityCode'",
          "coverage": ""
        },
        "34": {
          "source": "  , 'VisitProtectionIndicator'",
          "coverage": ""
        },
        "35": {
          "source": "  , 'ClinicOrganizationName'",
          "coverage": ""
        },
        "36": {
          "source": "  , 'PatientStatusCode'",
          "coverage": ""
        },
        "37": {
          "source": "  , 'VisitPriorityCode'",
          "coverage": ""
        },
        "38": {
          "source": "  , 'PreviousTreatmentDate'",
          "coverage": ""
        },
        "39": {
          "source": "  , 'ExpectedDischargeDisposition'",
          "coverage": ""
        },
        "40": {
          "source": "  , 'SignatureOnFileDate'",
          "coverage": ""
        },
        "41": {
          "source": "  , 'FirstSimilarIllnessDate'",
          "coverage": ""
        },
        "42": {
          "source": "  , 'PatientChargeAdjustmentCode'",
          "coverage": ""
        },
        "43": {
          "source": "  , 'RecurringServiceCode'",
          "coverage": ""
        },
        "44": {
          "source": "  , 'BillingMediaCode'",
          "coverage": ""
        },
        "45": {
          "source": "  , 'ExpectedSurgeryDateTime'",
          "coverage": ""
        },
        "46": {
          "source": "  , 'MilitaryPartnershipCode'",
          "coverage": ""
        },
        "47": {
          "source": "  , 'MilitaryNonAvailabilityCode'",
          "coverage": ""
        },
        "48": {
          "source": "  , 'NewbornBabyIndicator'",
          "coverage": ""
        },
        "49": {
          "source": "  , 'BabyDetainedIndicator'",
          "coverage": ""
        },
        "50": {
          "source": "]",
          "coverage": ""
        },
        "51": {
          "source": "",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/qak.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// QAK Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'QAK'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'Tag'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'ResponseStatus'",
          "coverage": ""
        },
        "15": {
          "source": "]",
          "coverage": ""
        },
        "16": {
          "source": "",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/qrd.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// QRD Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'QRD'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'DateTime'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'FormatCode'",
          "coverage": ""
        },
        "15": {
          "source": "  , 'Priority'",
          "coverage": ""
        },
        "16": {
          "source": "  , 'ID'",
          "coverage": ""
        },
        "17": {
          "source": "  , 'DeferredResponseType'",
          "coverage": ""
        },
        "18": {
          "source": "  , 'DeferredResponseDateTime'",
          "coverage": ""
        },
        "19": {
          "source": "  , 'QuantityLimitedRequest'",
          "coverage": ""
        },
        "20": {
          "source": "  , 'WhoSubjectFilter'",
          "coverage": ""
        },
        "21": {
          "source": "  , 'WhatSubjectFilter'",
          "coverage": ""
        },
        "22": {
          "source": "  , 'WhatDepartmentDataCode'",
          "coverage": ""
        },
        "23": {
          "source": "  , 'WhatDataCodeValueQual'",
          "coverage": ""
        },
        "24": {
          "source": "  , 'ResultsLevel'",
          "coverage": ""
        },
        "25": {
          "source": "]",
          "coverage": ""
        },
        "26": {
          "source": "",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/rdf.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// RDF Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'RDF'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'ColumnsPerRow'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'Description'",
          "coverage": ""
        },
        "15": {
          "source": "]",
          "coverage": ""
        },
        "16": {
          "source": "",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/rdt.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// RDT Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'RDT'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'Value'",
          "coverage": ""
        },
        "14": {
          "source": "]",
          "coverage": ""
        },
        "15": {
          "source": "",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/rol.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// ROL Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'ROL'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'RoleInstanceID'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'ActionCode'",
          "coverage": ""
        },
        "15": {
          "source": "  , 'RoleROL'",
          "coverage": ""
        },
        "16": {
          "source": "  , 'RolePerson'",
          "coverage": ""
        },
        "17": {
          "source": "  , 'RoleBeginDateTime'",
          "coverage": ""
        },
        "18": {
          "source": "  , 'RoleEndDateTime'",
          "coverage": ""
        },
        "19": {
          "source": "  , 'RoleDuration'",
          "coverage": ""
        },
        "20": {
          "source": "  , 'RoleActionReason'",
          "coverage": ""
        },
        "21": {
          "source": "]",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/rq1.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// RQ1 Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'RQ1'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'AnticipatedPrice'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'ManufacturerID'",
          "coverage": ""
        },
        "15": {
          "source": "  , 'ManufacturerCatalog'",
          "coverage": ""
        },
        "16": {
          "source": "  , 'VendorID'",
          "coverage": ""
        },
        "17": {
          "source": "  , 'VendorCatalog'",
          "coverage": ""
        },
        "18": {
          "source": "  , 'Taxable'",
          "coverage": ""
        },
        "19": {
          "source": "  , 'SubstituteAllowed'",
          "coverage": ""
        },
        "20": {
          "source": "]",
          "coverage": ""
        },
        "21": {
          "source": "",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/rqd.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// RQD Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'RQD'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'RequisitionLineNumber'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'ItemCodeInternal'",
          "coverage": ""
        },
        "15": {
          "source": "  , 'ItemCodeExternal'",
          "coverage": ""
        },
        "16": {
          "source": "  , 'HospitalItemCode'",
          "coverage": ""
        },
        "17": {
          "source": "  , 'RequisitionQuantity'",
          "coverage": ""
        },
        "18": {
          "source": "  , 'RequisitionUnitOfMeasure'",
          "coverage": ""
        },
        "19": {
          "source": "  , 'DeptCostCenter'",
          "coverage": ""
        },
        "20": {
          "source": "  , 'ItemNaturalAccountCode'",
          "coverage": ""
        },
        "21": {
          "source": "  , 'DeliverToID'",
          "coverage": ""
        },
        "22": {
          "source": "  , 'DateNeeded'",
          "coverage": ""
        },
        "23": {
          "source": "]",
          "coverage": ""
        },
        "24": {
          "source": "",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/spr.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// SPR Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'SPR'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'Tag'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'ResponseFormatCode'",
          "coverage": ""
        },
        "15": {
          "source": "  , 'Name'",
          "coverage": ""
        },
        "16": {
          "source": "  , 'InputParameterList'",
          "coverage": ""
        },
        "17": {
          "source": "]",
          "coverage": ""
        },
        "18": {
          "source": "",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/txa.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// TXA Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  txa.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   3/18/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'TXA'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'SetID'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'DocumentType'",
          "coverage": ""
        },
        "15": {
          "source": "  , 'DocumentContentPresentation'",
          "coverage": ""
        },
        "16": {
          "source": "  , 'ActivityDateTime'",
          "coverage": ""
        },
        "17": {
          "source": "  , 'PrimaryActivityProviderCodeName'",
          "coverage": ""
        },
        "18": {
          "source": "  , 'OriginationDateTime'",
          "coverage": ""
        },
        "19": {
          "source": "  , 'TranscriptionDateTime'",
          "coverage": ""
        },
        "20": {
          "source": "  , 'EditDateTime'",
          "coverage": ""
        },
        "21": {
          "source": "  , 'OriginatorCodeName'",
          "coverage": ""
        },
        "22": {
          "source": "  , 'AssignedDocumentAuthenticator'",
          "coverage": ""
        },
        "23": {
          "source": "  , 'TranscriptionistCodeName'",
          "coverage": ""
        },
        "24": {
          "source": "  , 'UniqueDocumentNumber'",
          "coverage": ""
        },
        "25": {
          "source": "  , 'ParentDocumentNumber'",
          "coverage": ""
        },
        "26": {
          "source": "  , 'PlacerOrderNumber'",
          "coverage": ""
        },
        "27": {
          "source": "  , 'FillerOrderNumber'",
          "coverage": ""
        },
        "28": {
          "source": "  , 'UniqueDocumentFileName'",
          "coverage": ""
        },
        "29": {
          "source": "  , 'DocumentCompletionStatus'",
          "coverage": ""
        },
        "30": {
          "source": "  , 'DocumentConfidentialityStatus'",
          "coverage": ""
        },
        "31": {
          "source": "  , 'DocumentAvailabilityStatus'",
          "coverage": ""
        },
        "32": {
          "source": "  , 'DocumentStorageStatus'",
          "coverage": ""
        },
        "33": {
          "source": "  , 'DocumentChangeReason'",
          "coverage": ""
        },
        "34": {
          "source": "  , 'AuthenticationPersonTimestamp'",
          "coverage": ""
        },
        "35": {
          "source": "  , 'DistributedCopies'",
          "coverage": ""
        },
        "36": {
          "source": "]",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/urd.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// URD Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'URD'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'DateTime'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'Priority'",
          "coverage": ""
        },
        "15": {
          "source": "  , 'WhoSubjectDefinition'",
          "coverage": ""
        },
        "16": {
          "source": "  , 'WhatSubjectDefinition'",
          "coverage": ""
        },
        "17": {
          "source": "  , 'WhatDepartmentCode'",
          "coverage": ""
        },
        "18": {
          "source": "  , 'DisplayPrintLocations'",
          "coverage": ""
        },
        "19": {
          "source": "  , 'ResultsLevel'",
          "coverage": ""
        },
        "20": {
          "source": "]",
          "coverage": ""
        },
        "21": {
          "source": "",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/urs.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// URS Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'URS'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'WhereSubjectDefinition'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'WhenDataStartDateTime'",
          "coverage": ""
        },
        "15": {
          "source": "  , 'WhenDataEndDateTime'",
          "coverage": ""
        },
        "16": {
          "source": "  , 'WhatUserQualifier'",
          "coverage": ""
        },
        "17": {
          "source": "  , 'OtherResultsSubjectDefinition'",
          "coverage": ""
        },
        "18": {
          "source": "  , 'WhichDateTimeQualifier'",
          "coverage": ""
        },
        "19": {
          "source": "  , 'WhichDateTimeStatusQualifier'",
          "coverage": ""
        },
        "20": {
          "source": "  , 'DateTimeSelectionQualifier'",
          "coverage": ""
        },
        "21": {
          "source": "  , 'QuantityTimingQualifier'",
          "coverage": ""
        },
        "22": {
          "source": "]",
          "coverage": ""
        },
        "23": {
          "source": "",
          "coverage": ""
        }
      }
    },
    {
      "filename": "segments/vtq.js",
      "coverage": 100,
      "hits": 2,
      "misses": 0,
      "sloc": 2,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// VTQ Segment Definition",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  segment.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "exports.name = 'VTQ'",
          "coverage": 1
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "exports.fields = [",
          "coverage": 1
        },
        "12": {
          "source": "    'SegmentType'",
          "coverage": ""
        },
        "13": {
          "source": "  , 'Tag'",
          "coverage": ""
        },
        "14": {
          "source": "  , 'ResponseFormatCode'",
          "coverage": ""
        },
        "15": {
          "source": "  , 'QueryName'",
          "coverage": ""
        },
        "16": {
          "source": "  , 'TableName'",
          "coverage": ""
        },
        "17": {
          "source": "  , 'SelectionCriteria'",
          "coverage": ""
        },
        "18": {
          "source": "]",
          "coverage": ""
        },
        "19": {
          "source": "",
          "coverage": ""
        }
      }
    },
    {
      "filename": "utils.js",
      "coverage": 100,
      "hits": 9,
      "misses": 0,
      "sloc": 9,
      "source": {
        "1": {
          "source": "//",
          "coverage": ""
        },
        "2": {
          "source": "// HL7 Parser - Utilities",
          "coverage": ""
        },
        "3": {
          "source": "//",
          "coverage": ""
        },
        "4": {
          "source": "// Author:    Evan Lucas",
          "coverage": ""
        },
        "5": {
          "source": "// Filename:  utils.js",
          "coverage": ""
        },
        "6": {
          "source": "// Created:   2/6/14",
          "coverage": ""
        },
        "7": {
          "source": "// Copyright: Evan Lucas 2014",
          "coverage": ""
        },
        "8": {
          "source": "//",
          "coverage": ""
        },
        "9": {
          "source": "",
          "coverage": ""
        },
        "10": {
          "source": "/**",
          "coverage": ""
        },
        "11": {
          "source": " * Module dependencies",
          "coverage": ""
        },
        "12": {
          "source": " */",
          "coverage": ""
        },
        "13": {
          "source": "var utils = exports",
          "coverage": 1
        },
        "14": {
          "source": "  , Segment = require('./segment')",
          "coverage": ""
        },
        "15": {
          "source": "",
          "coverage": ""
        },
        "16": {
          "source": "/**",
          "coverage": ""
        },
        "17": {
          "source": " * Is the given _segment_ a header segment?",
          "coverage": ""
        },
        "18": {
          "source": " *",
          "coverage": ""
        },
        "19": {
          "source": " * @param {Segment} segment A Segment object",
          "coverage": ""
        },
        "20": {
          "source": " * @api public",
          "coverage": ""
        },
        "21": {
          "source": " */",
          "coverage": ""
        },
        "22": {
          "source": "utils.segmentIsHeader = function(segment) {",
          "coverage": 1
        },
        "23": {
          "source": "  if (segment.segmentType) {",
          "coverage": 662
        },
        "24": {
          "source": "    return utils.segmentTypeIsHeader(segment.segmentType())",
          "coverage": 661
        },
        "25": {
          "source": "  }",
          "coverage": ""
        },
        "26": {
          "source": "  return false",
          "coverage": 1
        },
        "27": {
          "source": "}",
          "coverage": ""
        },
        "28": {
          "source": "",
          "coverage": ""
        },
        "29": {
          "source": "/**",
          "coverage": ""
        },
        "30": {
          "source": " * Is the given segment _type_ a header segment?",
          "coverage": ""
        },
        "31": {
          "source": " *",
          "coverage": ""
        },
        "32": {
          "source": " * @param {String} type The segment type",
          "coverage": ""
        },
        "33": {
          "source": " * @api public",
          "coverage": ""
        },
        "34": {
          "source": " */",
          "coverage": ""
        },
        "35": {
          "source": "utils.segmentTypeIsHeader = function(type) {",
          "coverage": 1
        },
        "36": {
          "source": "  return !!~utils.headerSegmentTypes.indexOf(type)",
          "coverage": 1315
        },
        "37": {
          "source": "}",
          "coverage": ""
        },
        "38": {
          "source": "",
          "coverage": ""
        },
        "39": {
          "source": "/*!",
          "coverage": ""
        },
        "40": {
          "source": " * Header types that define delimiters",
          "coverage": ""
        },
        "41": {
          "source": " */",
          "coverage": ""
        },
        "42": {
          "source": "utils.headerSegmentTypes = [",
          "coverage": 1
        },
        "43": {
          "source": "    'MSH'",
          "coverage": ""
        },
        "44": {
          "source": "  , 'FHS'",
          "coverage": ""
        },
        "45": {
          "source": "  , 'BHS'",
          "coverage": ""
        },
        "46": {
          "source": "]",
          "coverage": ""
        },
        "47": {
          "source": "",
          "coverage": ""
        },
        "48": {
          "source": "/*!",
          "coverage": ""
        },
        "49": {
          "source": " * Returns the supported HL7 versions",
          "coverage": ""
        },
        "50": {
          "source": " */",
          "coverage": ""
        },
        "51": {
          "source": "utils.supportedVersions = [",
          "coverage": 1
        },
        "52": {
          "source": "  '2.3.1'",
          "coverage": ""
        },
        "53": {
          "source": "]",
          "coverage": ""
        }
      }
    }
  ],
  "stats": {
    "suites": 22,
    "tests": 78,
    "passes": 78,
    "pending": 0,
    "failures": 0,
    "start": "2014-03-18T23:05:28.215Z",
    "end": "2014-03-18T23:05:28.303Z",
    "duration": 88
  },
  "tests": [
    {
      "title": "should support using new",
      "fullTitle": "Message should support using new",
      "duration": 1
    },
    {
      "title": "should support not using new",
      "fullTitle": "Message should support not using new",
      "duration": 0
    },
    {
      "title": "should support no header",
      "fullTitle": "Message Header should support no header",
      "duration": 1
    },
    {
      "title": "should support taking an array of Segments",
      "fullTitle": "Message Arguments should support taking an array of Segments",
      "duration": 0
    },
    {
      "title": "should support taking a single Segment",
      "fullTitle": "Message Arguments should support taking a single Segment",
      "duration": 0
    },
    {
      "title": "should support taking no Segments",
      "fullTitle": "Message Arguments should support taking no Segments",
      "duration": 0
    },
    {
      "title": "should support having no segments",
      "fullTitle": "Message Segments should support having no segments",
      "duration": 1
    },
    {
      "title": "should support having multiple segments",
      "fullTitle": "Message Segments should support having multiple segments",
      "duration": 0
    },
    {
      "title": "should allow using new",
      "fullTitle": "HL7 parser Construct should allow using new",
      "duration": 0
    },
    {
      "title": "should allow omitting new",
      "fullTitle": "HL7 parser Construct should allow omitting new",
      "duration": 1
    },
    {
      "title": "should be able to parse",
      "fullTitle": "HL7 parser Parse from file should be able to parse",
      "duration": 9
    },
    {
      "title": "should be able to parse a file with multiple messages",
      "fullTitle": "HL7 parser Parse from file should be able to parse a file with multiple messages",
      "duration": 52
    },
    {
      "title": "should emit an error on an invalid file",
      "fullTitle": "HL7 parser Parse from file should emit an error on an invalid file",
      "duration": 2
    },
    {
      "title": "should support multiple messages",
      "fullTitle": "HL7 parser Events should support multiple messages",
      "duration": 1
    },
    {
      "title": "should get a message event",
      "fullTitle": "HL7 parser Events should get a message event",
      "duration": 0
    },
    {
      "title": "should get a segment event",
      "fullTitle": "HL7 parser Events should get a segment event",
      "duration": 1
    },
    {
      "title": "should allow using new",
      "fullTitle": "Segment Construct should allow using new",
      "duration": 0
    },
    {
      "title": "should allow omitting new",
      "fullTitle": "Segment Construct should allow omitting new",
      "duration": 1
    },
    {
      "title": "should support getting the segment type",
      "fullTitle": "Segment Type should support getting the segment type",
      "duration": 0
    },
    {
      "title": "should support getting the header",
      "fullTitle": "Segment Headers should support getting the header",
      "duration": 0
    },
    {
      "title": "ADD should have a SegmentType",
      "fullTitle": "Segment Types ADD should have a SegmentType",
      "duration": 1
    },
    {
      "title": "AL1 should have a SegmentType",
      "fullTitle": "Segment Types AL1 should have a SegmentType",
      "duration": 0
    },
    {
      "title": "BHS should have a SegmentType",
      "fullTitle": "Segment Types BHS should have a SegmentType",
      "duration": 0
    },
    {
      "title": "BLG should have a SegmentType",
      "fullTitle": "Segment Types BLG should have a SegmentType",
      "duration": 0
    },
    {
      "title": "BTS should have a SegmentType",
      "fullTitle": "Segment Types BTS should have a SegmentType",
      "duration": 0
    },
    {
      "title": "DB1 should have a SegmentType",
      "fullTitle": "Segment Types DB1 should have a SegmentType",
      "duration": 0
    },
    {
      "title": "DG1 should have a SegmentType",
      "fullTitle": "Segment Types DG1 should have a SegmentType",
      "duration": 0
    },
    {
      "title": "DRG should have a SegmentType",
      "fullTitle": "Segment Types DRG should have a SegmentType",
      "duration": 0
    },
    {
      "title": "DSC should have a SegmentType",
      "fullTitle": "Segment Types DSC should have a SegmentType",
      "duration": 1
    },
    {
      "title": "DSP should have a SegmentType",
      "fullTitle": "Segment Types DSP should have a SegmentType",
      "duration": 0
    },
    {
      "title": "EQL should have a SegmentType",
      "fullTitle": "Segment Types EQL should have a SegmentType",
      "duration": 0
    },
    {
      "title": "ERQ should have a SegmentType",
      "fullTitle": "Segment Types ERQ should have a SegmentType",
      "duration": 0
    },
    {
      "title": "ERR should have a SegmentType",
      "fullTitle": "Segment Types ERR should have a SegmentType",
      "duration": 0
    },
    {
      "title": "EVN should have a SegmentType",
      "fullTitle": "Segment Types EVN should have a SegmentType",
      "duration": 0
    },
    {
      "title": "FHS should have a SegmentType",
      "fullTitle": "Segment Types FHS should have a SegmentType",
      "duration": 0
    },
    {
      "title": "FT1 should have a SegmentType",
      "fullTitle": "Segment Types FT1 should have a SegmentType",
      "duration": 0
    },
    {
      "title": "FTS should have a SegmentType",
      "fullTitle": "Segment Types FTS should have a SegmentType",
      "duration": 0
    },
    {
      "title": "GT1 should have a SegmentType",
      "fullTitle": "Segment Types GT1 should have a SegmentType",
      "duration": 0
    },
    {
      "title": "IN1 should have a SegmentType",
      "fullTitle": "Segment Types IN1 should have a SegmentType",
      "duration": 0
    },
    {
      "title": "IN2 should have a SegmentType",
      "fullTitle": "Segment Types IN2 should have a SegmentType",
      "duration": 0
    },
    {
      "title": "MRG should have a SegmentType",
      "fullTitle": "Segment Types MRG should have a SegmentType",
      "duration": 0
    },
    {
      "title": "MSA should have a SegmentType",
      "fullTitle": "Segment Types MSA should have a SegmentType",
      "duration": 0
    },
    {
      "title": "MSH should have a SegmentType",
      "fullTitle": "Segment Types MSH should have a SegmentType",
      "duration": 0
    },
    {
      "title": "NK1 should have a SegmentType",
      "fullTitle": "Segment Types NK1 should have a SegmentType",
      "duration": 0
    },
    {
      "title": "NPU should have a SegmentType",
      "fullTitle": "Segment Types NPU should have a SegmentType",
      "duration": 0
    },
    {
      "title": "NTE should have a SegmentType",
      "fullTitle": "Segment Types NTE should have a SegmentType",
      "duration": 0
    },
    {
      "title": "OBR should have a SegmentType",
      "fullTitle": "Segment Types OBR should have a SegmentType",
      "duration": 0
    },
    {
      "title": "OBX should have a SegmentType",
      "fullTitle": "Segment Types OBX should have a SegmentType",
      "duration": 0
    },
    {
      "title": "ODS should have a SegmentType",
      "fullTitle": "Segment Types ODS should have a SegmentType",
      "duration": 0
    },
    {
      "title": "ODT should have a SegmentType",
      "fullTitle": "Segment Types ODT should have a SegmentType",
      "duration": 0
    },
    {
      "title": "ORC should have a SegmentType",
      "fullTitle": "Segment Types ORC should have a SegmentType",
      "duration": 0
    },
    {
      "title": "PD1 should have a SegmentType",
      "fullTitle": "Segment Types PD1 should have a SegmentType",
      "duration": 0
    },
    {
      "title": "PID should have a SegmentType",
      "fullTitle": "Segment Types PID should have a SegmentType",
      "duration": 0
    },
    {
      "title": "PR1 should have a SegmentType",
      "fullTitle": "Segment Types PR1 should have a SegmentType",
      "duration": 0
    },
    {
      "title": "PV1 should have a SegmentType",
      "fullTitle": "Segment Types PV1 should have a SegmentType",
      "duration": 0
    },
    {
      "title": "PV2 should have a SegmentType",
      "fullTitle": "Segment Types PV2 should have a SegmentType",
      "duration": 0
    },
    {
      "title": "QAK should have a SegmentType",
      "fullTitle": "Segment Types QAK should have a SegmentType",
      "duration": 0
    },
    {
      "title": "QRD should have a SegmentType",
      "fullTitle": "Segment Types QRD should have a SegmentType",
      "duration": 0
    },
    {
      "title": "RDF should have a SegmentType",
      "fullTitle": "Segment Types RDF should have a SegmentType",
      "duration": 0
    },
    {
      "title": "RDT should have a SegmentType",
      "fullTitle": "Segment Types RDT should have a SegmentType",
      "duration": 0
    },
    {
      "title": "ROL should have a SegmentType",
      "fullTitle": "Segment Types ROL should have a SegmentType",
      "duration": 0
    },
    {
      "title": "RQ1 should have a SegmentType",
      "fullTitle": "Segment Types RQ1 should have a SegmentType",
      "duration": 0
    },
    {
      "title": "RQD should have a SegmentType",
      "fullTitle": "Segment Types RQD should have a SegmentType",
      "duration": 0
    },
    {
      "title": "SPR should have a SegmentType",
      "fullTitle": "Segment Types SPR should have a SegmentType",
      "duration": 1
    },
    {
      "title": "TXA should have a SegmentType",
      "fullTitle": "Segment Types TXA should have a SegmentType",
      "duration": 0
    },
    {
      "title": "URD should have a SegmentType",
      "fullTitle": "Segment Types URD should have a SegmentType",
      "duration": 0
    },
    {
      "title": "URS should have a SegmentType",
      "fullTitle": "Segment Types URS should have a SegmentType",
      "duration": 0
    },
    {
      "title": "VTQ should have a SegmentType",
      "fullTitle": "Segment Types VTQ should have a SegmentType",
      "duration": 0
    },
    {
      "title": "should support registering variants",
      "fullTitle": "Segment Variant should support registering variants",
      "duration": 1
    },
    {
      "title": "requires the variant to be an object",
      "fullTitle": "Segment Variant Pass invalid variant requires the variant to be an object",
      "duration": 1
    },
    {
      "title": "requires the variant to have a name",
      "fullTitle": "Segment Variant Pass invalid variant requires the variant to have a name",
      "duration": 0
    },
    {
      "title": "requires the variant to have fields",
      "fullTitle": "Segment Variant Pass invalid variant requires the variant to have fields",
      "duration": 0
    },
    {
      "title": "should return an array of fields",
      "fullTitle": "Segment toArray() MSH should return an array of fields",
      "duration": 0
    },
    {
      "title": "should return an array of fields",
      "fullTitle": "Segment toArray() PID should return an array of fields",
      "duration": 0
    },
    {
      "title": "should return an array of fields",
      "fullTitle": "Segment toArray() NK1 should return an array of fields",
      "duration": 1
    },
    {
      "title": "should return an array of fields",
      "fullTitle": "Segment toArray() PV1 should return an array of fields",
      "duration": 1
    },
    {
      "title": "should support passing a Segment",
      "fullTitle": "Utilities segmentIsHeader() should support passing a Segment",
      "duration": 0
    },
    {
      "title": "should support null",
      "fullTitle": "Utilities segmentIsHeader() should support null",
      "duration": 0
    }
  ],
  "failures": [],
  "passes": [
    {
      "title": "should support using new",
      "fullTitle": "Message should support using new",
      "duration": 1
    },
    {
      "title": "should support not using new",
      "fullTitle": "Message should support not using new",
      "duration": 0
    },
    {
      "title": "should support no header",
      "fullTitle": "Message Header should support no header",
      "duration": 1
    },
    {
      "title": "should support taking an array of Segments",
      "fullTitle": "Message Arguments should support taking an array of Segments",
      "duration": 0
    },
    {
      "title": "should support taking a single Segment",
      "fullTitle": "Message Arguments should support taking a single Segment",
      "duration": 0
    },
    {
      "title": "should support taking no Segments",
      "fullTitle": "Message Arguments should support taking no Segments",
      "duration": 0
    },
    {
      "title": "should support having no segments",
      "fullTitle": "Message Segments should support having no segments",
      "duration": 1
    },
    {
      "title": "should support having multiple segments",
      "fullTitle": "Message Segments should support having multiple segments",
      "duration": 0
    },
    {
      "title": "should allow using new",
      "fullTitle": "HL7 parser Construct should allow using new",
      "duration": 0
    },
    {
      "title": "should allow omitting new",
      "fullTitle": "HL7 parser Construct should allow omitting new",
      "duration": 1
    },
    {
      "title": "should be able to parse",
      "fullTitle": "HL7 parser Parse from file should be able to parse",
      "duration": 9
    },
    {
      "title": "should be able to parse a file with multiple messages",
      "fullTitle": "HL7 parser Parse from file should be able to parse a file with multiple messages",
      "duration": 52
    },
    {
      "title": "should emit an error on an invalid file",
      "fullTitle": "HL7 parser Parse from file should emit an error on an invalid file",
      "duration": 2
    },
    {
      "title": "should support multiple messages",
      "fullTitle": "HL7 parser Events should support multiple messages",
      "duration": 1
    },
    {
      "title": "should get a message event",
      "fullTitle": "HL7 parser Events should get a message event",
      "duration": 0
    },
    {
      "title": "should get a segment event",
      "fullTitle": "HL7 parser Events should get a segment event",
      "duration": 1
    },
    {
      "title": "should allow using new",
      "fullTitle": "Segment Construct should allow using new",
      "duration": 0
    },
    {
      "title": "should allow omitting new",
      "fullTitle": "Segment Construct should allow omitting new",
      "duration": 1
    },
    {
      "title": "should support getting the segment type",
      "fullTitle": "Segment Type should support getting the segment type",
      "duration": 0
    },
    {
      "title": "should support getting the header",
      "fullTitle": "Segment Headers should support getting the header",
      "duration": 0
    },
    {
      "title": "ADD should have a SegmentType",
      "fullTitle": "Segment Types ADD should have a SegmentType",
      "duration": 1
    },
    {
      "title": "AL1 should have a SegmentType",
      "fullTitle": "Segment Types AL1 should have a SegmentType",
      "duration": 0
    },
    {
      "title": "BHS should have a SegmentType",
      "fullTitle": "Segment Types BHS should have a SegmentType",
      "duration": 0
    },
    {
      "title": "BLG should have a SegmentType",
      "fullTitle": "Segment Types BLG should have a SegmentType",
      "duration": 0
    },
    {
      "title": "BTS should have a SegmentType",
      "fullTitle": "Segment Types BTS should have a SegmentType",
      "duration": 0
    },
    {
      "title": "DB1 should have a SegmentType",
      "fullTitle": "Segment Types DB1 should have a SegmentType",
      "duration": 0
    },
    {
      "title": "DG1 should have a SegmentType",
      "fullTitle": "Segment Types DG1 should have a SegmentType",
      "duration": 0
    },
    {
      "title": "DRG should have a SegmentType",
      "fullTitle": "Segment Types DRG should have a SegmentType",
      "duration": 0
    },
    {
      "title": "DSC should have a SegmentType",
      "fullTitle": "Segment Types DSC should have a SegmentType",
      "duration": 1
    },
    {
      "title": "DSP should have a SegmentType",
      "fullTitle": "Segment Types DSP should have a SegmentType",
      "duration": 0
    },
    {
      "title": "EQL should have a SegmentType",
      "fullTitle": "Segment Types EQL should have a SegmentType",
      "duration": 0
    },
    {
      "title": "ERQ should have a SegmentType",
      "fullTitle": "Segment Types ERQ should have a SegmentType",
      "duration": 0
    },
    {
      "title": "ERR should have a SegmentType",
      "fullTitle": "Segment Types ERR should have a SegmentType",
      "duration": 0
    },
    {
      "title": "EVN should have a SegmentType",
      "fullTitle": "Segment Types EVN should have a SegmentType",
      "duration": 0
    },
    {
      "title": "FHS should have a SegmentType",
      "fullTitle": "Segment Types FHS should have a SegmentType",
      "duration": 0
    },
    {
      "title": "FT1 should have a SegmentType",
      "fullTitle": "Segment Types FT1 should have a SegmentType",
      "duration": 0
    },
    {
      "title": "FTS should have a SegmentType",
      "fullTitle": "Segment Types FTS should have a SegmentType",
      "duration": 0
    },
    {
      "title": "GT1 should have a SegmentType",
      "fullTitle": "Segment Types GT1 should have a SegmentType",
      "duration": 0
    },
    {
      "title": "IN1 should have a SegmentType",
      "fullTitle": "Segment Types IN1 should have a SegmentType",
      "duration": 0
    },
    {
      "title": "IN2 should have a SegmentType",
      "fullTitle": "Segment Types IN2 should have a SegmentType",
      "duration": 0
    },
    {
      "title": "MRG should have a SegmentType",
      "fullTitle": "Segment Types MRG should have a SegmentType",
      "duration": 0
    },
    {
      "title": "MSA should have a SegmentType",
      "fullTitle": "Segment Types MSA should have a SegmentType",
      "duration": 0
    },
    {
      "title": "MSH should have a SegmentType",
      "fullTitle": "Segment Types MSH should have a SegmentType",
      "duration": 0
    },
    {
      "title": "NK1 should have a SegmentType",
      "fullTitle": "Segment Types NK1 should have a SegmentType",
      "duration": 0
    },
    {
      "title": "NPU should have a SegmentType",
      "fullTitle": "Segment Types NPU should have a SegmentType",
      "duration": 0
    },
    {
      "title": "NTE should have a SegmentType",
      "fullTitle": "Segment Types NTE should have a SegmentType",
      "duration": 0
    },
    {
      "title": "OBR should have a SegmentType",
      "fullTitle": "Segment Types OBR should have a SegmentType",
      "duration": 0
    },
    {
      "title": "OBX should have a SegmentType",
      "fullTitle": "Segment Types OBX should have a SegmentType",
      "duration": 0
    },
    {
      "title": "ODS should have a SegmentType",
      "fullTitle": "Segment Types ODS should have a SegmentType",
      "duration": 0
    },
    {
      "title": "ODT should have a SegmentType",
      "fullTitle": "Segment Types ODT should have a SegmentType",
      "duration": 0
    },
    {
      "title": "ORC should have a SegmentType",
      "fullTitle": "Segment Types ORC should have a SegmentType",
      "duration": 0
    },
    {
      "title": "PD1 should have a SegmentType",
      "fullTitle": "Segment Types PD1 should have a SegmentType",
      "duration": 0
    },
    {
      "title": "PID should have a SegmentType",
      "fullTitle": "Segment Types PID should have a SegmentType",
      "duration": 0
    },
    {
      "title": "PR1 should have a SegmentType",
      "fullTitle": "Segment Types PR1 should have a SegmentType",
      "duration": 0
    },
    {
      "title": "PV1 should have a SegmentType",
      "fullTitle": "Segment Types PV1 should have a SegmentType",
      "duration": 0
    },
    {
      "title": "PV2 should have a SegmentType",
      "fullTitle": "Segment Types PV2 should have a SegmentType",
      "duration": 0
    },
    {
      "title": "QAK should have a SegmentType",
      "fullTitle": "Segment Types QAK should have a SegmentType",
      "duration": 0
    },
    {
      "title": "QRD should have a SegmentType",
      "fullTitle": "Segment Types QRD should have a SegmentType",
      "duration": 0
    },
    {
      "title": "RDF should have a SegmentType",
      "fullTitle": "Segment Types RDF should have a SegmentType",
      "duration": 0
    },
    {
      "title": "RDT should have a SegmentType",
      "fullTitle": "Segment Types RDT should have a SegmentType",
      "duration": 0
    },
    {
      "title": "ROL should have a SegmentType",
      "fullTitle": "Segment Types ROL should have a SegmentType",
      "duration": 0
    },
    {
      "title": "RQ1 should have a SegmentType",
      "fullTitle": "Segment Types RQ1 should have a SegmentType",
      "duration": 0
    },
    {
      "title": "RQD should have a SegmentType",
      "fullTitle": "Segment Types RQD should have a SegmentType",
      "duration": 0
    },
    {
      "title": "SPR should have a SegmentType",
      "fullTitle": "Segment Types SPR should have a SegmentType",
      "duration": 1
    },
    {
      "title": "TXA should have a SegmentType",
      "fullTitle": "Segment Types TXA should have a SegmentType",
      "duration": 0
    },
    {
      "title": "URD should have a SegmentType",
      "fullTitle": "Segment Types URD should have a SegmentType",
      "duration": 0
    },
    {
      "title": "URS should have a SegmentType",
      "fullTitle": "Segment Types URS should have a SegmentType",
      "duration": 0
    },
    {
      "title": "VTQ should have a SegmentType",
      "fullTitle": "Segment Types VTQ should have a SegmentType",
      "duration": 0
    },
    {
      "title": "should support registering variants",
      "fullTitle": "Segment Variant should support registering variants",
      "duration": 1
    },
    {
      "title": "requires the variant to be an object",
      "fullTitle": "Segment Variant Pass invalid variant requires the variant to be an object",
      "duration": 1
    },
    {
      "title": "requires the variant to have a name",
      "fullTitle": "Segment Variant Pass invalid variant requires the variant to have a name",
      "duration": 0
    },
    {
      "title": "requires the variant to have fields",
      "fullTitle": "Segment Variant Pass invalid variant requires the variant to have fields",
      "duration": 0
    },
    {
      "title": "should return an array of fields",
      "fullTitle": "Segment toArray() MSH should return an array of fields",
      "duration": 0
    },
    {
      "title": "should return an array of fields",
      "fullTitle": "Segment toArray() PID should return an array of fields",
      "duration": 0
    },
    {
      "title": "should return an array of fields",
      "fullTitle": "Segment toArray() NK1 should return an array of fields",
      "duration": 1
    },
    {
      "title": "should return an array of fields",
      "fullTitle": "Segment toArray() PV1 should return an array of fields",
      "duration": 1
    },
    {
      "title": "should support passing a Segment",
      "fullTitle": "Utilities segmentIsHeader() should support passing a Segment",
      "duration": 0
    },
    {
      "title": "should support null",
      "fullTitle": "Utilities segmentIsHeader() should support null",
      "duration": 0
    }
  ]
}